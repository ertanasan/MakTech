CREATE PROCEDURE INV_UPD_STOCKDASHBOARD_SP AS 
BEGIN

	DECLARE @Date DATE = CAST(GETDATE() AS DATE)
	DECLARE @StartDate DATE = DATEADD(DAY, -30, @Date); 

	IF OBJECT_ID('tempdb..#TODAYSTORE') IS NOT NULL DROP TABLE #TODAYSTORE
	IF OBJECT_ID('tempdb..#MONTHSTORE') IS NOT NULL DROP TABLE #MONTHSTORE
	IF OBJECT_ID('tempdb..#MONTHWH') IS NOT NULL DROP TABLE #MONTHWH
	IF OBJECT_ID('tempdb..#RESULT') IS NOT NULL DROP TABLE #RESULT

	SELECT @Date DATE_DT, CS.STORE, CS.PRODUCT, SUM(CS.STOCK) STOCK_QTY, 
		   SUM(CS.STOCK * SP.PRICE_AMT) STOCK_AMT, 
		   SUM(AVGDAILYSALE) SALE_QTY,
		   SUM(AVGDAILYSALE * SP.PRICE_AMT) SALE_AMT
	  INTO #TODAYSTORE
	  FROM INV_CURRENTSTOCK CS
	  JOIN PRC_SALEPRICE_VW SP ON CS.PRODUCT = SP.PRODUCT
	 GROUP BY CS.STORE, CS.PRODUCT

	SELECT SD.DATE_DT, SD.STORE, SD.PRODUCT, SUM(SD.STOCK) STOCK_QTY, 
		   SUM(SD.STOCK * SP.PRICE_AMT) STOCK_AMT, MAX(ISNULL(TS.SALE_QTY, 0)) SALE_QTY,
		   MAX(ISNULL(TS.SALE_AMT, 0)) SALE_AMT
	  INTO #MONTHSTORE
	  FROM INV_STOCKDATE_SYN SD
	  JOIN PRC_SALEPRICE_VW SP ON SD.PRODUCT = SP.PRODUCT
	  LEFT JOIN #TODAYSTORE TS ON SD.STORE = TS.STORE AND SD.PRODUCT = TS.PRODUCT
	 WHERE SD.DATE_DT >= @StartDate
	   AND SD.DATE_DT < @Date
	 GROUP BY SD.DATE_DT, SD.STORE, SD.PRODUCT;

	WITH SALES AS (
	SELECT ST.PRODUCT, 
		   SUM(-1*QUANTITY_QTY) / 31 SALE_QTY,
		   SUM(-1*QUANTITY_QTY * COALESCE(SP.PRICE_AMT, C.WEIGHTEDPURCHASE_AMT))/31 SALE_AMT
	  FROM INV_STOCKTRANSACTIONS_SYN ST   
	  LEFT JOIN PRC_SALEPRICE_VW SP ON ST.PRODUCT = SP.PRODUCT
	  LEFT JOIN PRD_COGS C ON '2020-03-20' BETWEEN C.START_DT AND C.END_DT AND C.PRODUCT = ST.PRODUCT
	 WHERE WAREHOUSE = 1001    
	   AND TRANSACTION_DT BETWEEN @StartDate AND @Date    
	   AND TRANSACTIONTYPE = 2    
	 GROUP BY ST.PRODUCT)
	SELECT DT.DATE_DT, 1001 STORE, WS.PRODUCT, SUM(STOCK) STOCK_QTY,
		   SUM(STOCK * COALESCE(SP.PRICE_AMT, C.WEIGHTEDPURCHASE_AMT)) STOCK_AMT,
		   S.SALE_QTY, S.SALE_AMT
	  INTO #MONTHWH
	  FROM INV_WAREHOUSESTOCK_VW WS
	  JOIN RPT_DATE DT ON DT.DATE_DT BETWEEN WS.START_DT AND WS.END_DT
	  JOIN PRD_PRODUCT P ON WS.PRODUCT = P.PRODUCTID
	  LEFT JOIN PRC_SALEPRICE_VW SP ON WS.PRODUCT = SP.PRODUCT
	  LEFT JOIN PRD_COGS C ON DT.DATE_DT BETWEEN C.START_DT AND C.END_DT AND C.PRODUCT = WS.PRODUCT
	  LEFT JOIN SALES S ON WS.PRODUCT = S.PRODUCT
	 WHERE DT.DATE_DT BETWEEN @StartDate AND @Date    
	   AND WAREHOUSE = 1001
	   AND P.SUPERGROUP1 != 9
	 GROUP BY DT.DATE_DT, WS.PRODUCT, S.SALE_QTY, S.SALE_AMT

	SELECT * INTO #RESULT 
	  FROM (
	SELECT *
	  FROM #TODAYSTORE
	 UNION ALL
	SELECT *
	  FROM #MONTHSTORE
	 UNION ALL
	SELECT *
	  FROM #MONTHWH) A

	DELETE D 
	-- SELECT *
	  FROM INV_STOCKDASHBOARD D
	  LEFT JOIN #RESULT R ON D.DATE_DT = R.DATE_DT AND D.STORE = R.STORE AND D.PRODUCT = R.PRODUCT
	 WHERE R.DATE_DT IS NULL

	UPDATE D 
	   SET D.STOCK_QTY = R.STOCK_QTY, D.STOCK_AMT = R.STOCK_AMT,
		   D.SALE_QTY = R.SALE_QTY, D.SALE_AMT = R.SALE_AMT
	  FROM INV_STOCKDASHBOARD D
	  JOIN #RESULT R ON D.DATE_DT = R.DATE_DT AND D.STORE = R.STORE AND D.PRODUCT = R.PRODUCT
	 WHERE (ROUND(ABS(D.STOCK_AMT - R.STOCK_AMT),2) >= 0.01 OR
			ROUND(ABS(D.STOCK_QTY - R.STOCK_QTY),2) >= 0.01 OR
			ROUND(ABS(D.SALE_QTY - R.SALE_QTY),2) >= 0.01 OR
			ROUND(ABS(D.SALE_AMT - R.SALE_AMT),2) >= 0.01)

	INSERT INTO INV_STOCKDASHBOARD 
	SELECT R.*
	  FROM #RESULT R 
	  LEFT JOIN INV_STOCKDASHBOARD D ON D.DATE_DT = R.DATE_DT AND D.STORE = R.STORE AND D.PRODUCT = R.PRODUCT
	 WHERE D.DATE_DT IS NULL

END