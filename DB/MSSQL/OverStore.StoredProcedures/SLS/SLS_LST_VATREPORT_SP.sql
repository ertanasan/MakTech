CREATE PROCEDURE SLS_LST_VATREPORT_SP @StartDate DATE, @EndDate DATE, @OnlyRefund INT = 0 WITH RECOMPILE AS    
BEGIN    
    
	IF OBJECT_ID('tempdb..#vatprod') IS NOT NULL DROP TABLE #vatprod    
    
	SELECT SD.STORE, P.CODE_NM, P.NAME_NM, SD.VAT_RT
		 , SUM(CASE WHEN SD.UNIT = 1 THEN SD.QUANTITY_QTY / 1000.0 ELSE SD.QUANTITY_QTY END) QUANTITY
		 , SUM(SD.PRICE) PRICE
		 , ROUND(SUM(SD.PRICE*SD.VAT_RT/(100+SD.VAT_RT)),2) VAT
	  INTO #vatprod    
	  FROM SLS_SALEDETAIL SD (NOLOCK)
	  JOIN STR_STORE ST (NOLOCK) ON SD.STORE = ST.STOREID    
	  JOIN SLS_SALE S (NOLOCK) ON SD.SALE = S.SALEID AND SD.TRANSACTION_DT = S.TRANSACTION_DT AND SD.STORE = S.STORE     
	  JOIN PRD_PRODUCT P (NOLOCK) ON SD.PRODUCT = P.PRODUCTID    
	 WHERE SD.TRANSACTION_DT BETWEEN @StartDate AND @EndDate    
	   AND S.CANCELLED_FL = 'N'    
	   AND SD.CANCEL_FL = 'N'    
	   AND (ISNULL(@OnlyRefund,0) = 0 OR S.TRANSACTIONTYPE = 5)  -- SADECE REFUND ISLEMLERI    
	 GROUP BY SD.STORE, P.CODE_NM, P.NAME_NM, SD.VAT_RT    
    
	SELECT CODE_NM UrunKodu, NAME_NM UrunAdi, VAT_RT Oran, SUM(PRICE) Satis, SUM(VAT) KDV, SUM(QUANTITY) Miktar
	  FROM #vatprod    
	 GROUP BY code_nm, name_nm, VAT_RT   
	
	/*
	SELECT UrunKodu, UrunAdi, Oran, Satis, Satis - (Satis * 100.0 / (100.0 + Oran)) KDV, Miktar
	  FROM (
	SELECT P.CODE_NM UrunKodu, P.NAME_NM UrunAdi, P.SALEVAT_RT Oran, SUM(SALE_AMT+REFUND_AMT) Satis, SUM(S.SALE_QTY+REFUND_QTY) Miktar 
	  FROM SLS_PRODUCTSUMMARY_SYN S (NOLOCK)
	  JOIN PRD_PRODUCT P ON S.PRODUCT = P.PRODUCTID
	 WHERE TRANSACTION_DT BETWEEN @StartDate AND @EndDate
	 GROUP BY P.CODE_NM, P.NAME_NM, P.SALEVAT_RT) A
    */
END