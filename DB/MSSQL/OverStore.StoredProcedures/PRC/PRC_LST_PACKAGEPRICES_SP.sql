CREATE PROCEDURE [dbo].[PRC_LST_PACKAGEPRICES_SP] @PackageId INT AS
BEGIN

  IF OBJECT_ID('tempdb..#PLU') IS NOT NULL DROP TABLE #PLU
  IF OBJECT_ID('tempdb..#CURRENTPRICES') IS NOT NULL DROP TABLE #CURRENTPRICES

  SELECT PRODUCT
       , MAX(CASE WHEN ORDERNO = 1 THEN BARCODE ELSE '00000000000000000000' END) PLU1
       , MAX(CASE WHEN ORDERNO = 2 THEN BARCODE ELSE '00000000000000000000' END) PLU2
       , MAX(CASE WHEN ORDERNO = 3 THEN BARCODE ELSE '00000000000000000000' END) PLU3
    INTO #PLU
    FROM (SELECT B.PRODUCT, B.BARCODE_TXT BARCODE, ROW_NUMBER() OVER (PARTITION BY PRODUCT ORDER BY B.BARCODEID) ORDERNO
			FROM PRD_BARCODE B) A
   GROUP BY PRODUCT

  DECLARE @VERSIONID1 INT;
  SELECT TOP 1 @VERSIONID1 = PACKAGEVERSIONID FROM PRC_PACKAGEVERSION WHERE PACKAGE = 1 AND (@PackageId != 1 OR ACTIVE_FL = 'Y') ORDER BY VERSION_DT DESC;

  SELECT PRODUCTID, ORGANIZATION, DELETED_FL, CREATE_DT, UPDATE_DT, CREATEUSER, UPDATEUSER, PRICE_AMT, PRODUCT, PACKAGE, TOPPRICE_AMT, PRINTTOPPRICE_FL, PACKAGEVERSION
    INTO #CURRENTPRICES
    FROM (
  SELECT P.PRODUCTID, P.ORGANIZATION, P.DELETED_FL, P.CREATE_DT, P.UPDATE_DT, P.CREATEUSER, P.UPDATEUSER,
         COALESCE(PL.PRICE_AMT, P.PRICE_AMT) PRICE_AMT, P.PRODUCT, P.PACKAGE, COALESCE(PL.TOPPRICE_AMT, P.TOPPRICE_AMT) TOPPRICE_AMT,
         COALESCE(PL.PRINTTOPPRICE_FL, P.PRINTTOPPRICE_FL) PRINTTOPPRICE_FL, @VERSIONID1 PACKAGEVERSION,
         ROW_NUMBER() OVER (PARTITION BY P.PRODUCT ORDER BY COALESCE(PL.LOG_DT, P.UPDATE_DT, P.CREATE_DT) DESC) ROWNUMBER
    FROM PRC_PRODUCT P
    LEFT JOIN PRC_PRODUCTLOG PL ON P.PACKAGE = PL.PACKAGE AND P.PRODUCT = PL.PRODUCT AND PL.PACKAGEVERSION <= @VERSIONID1 AND P.PACKAGEVERSION > @VERSIONID1
   WHERE P.PACKAGE = 1 AND P.DELETED_FL = 'N') A
   WHERE ROWNUMBER = 1

  SELECT COALESCE(P2.PRODUCTID, P.PRODUCTID) PRODUCTID,   
         COALESCE(P2.ORGANIZATION, P.ORGANIZATION) ORGANIZATION,
         COALESCE(P2.DELETED_FL, P.DELETED_FL) DELETED_FL,
         COALESCE(P2.CREATE_DT,  P.CREATE_DT) CREATE_DT,
         COALESCE(P2.UPDATE_DT,  P2.CREATE_DT, P.UPDATE_DT) UPDATE_DT,
         COALESCE(P2.CREATEUSER, P.CREATEUSER) CREATEUSER,
         COALESCE(P2.UPDATEUSER, P.UPDATEUSER) UPDATEUSER,            
         P.PRICE_AMT CURRENTPRICE_AMT,
		 COALESCE(P2.PRICE_AMT, P.PRICE_AMT) PRICE_AMT,
		 P.PRODUCT, @PackageId PACKAGE,
         COALESCE(P2.TOPPRICE_AMT, P.TOPPRICE_AMT) TOPPRICE_AMT,
         COALESCE(P2.PRINTTOPPRICE_FL, P.PRINTTOPPRICE_FL) PRINTTOPPRICE_FL,
         COALESCE(P2.PACKAGEVERSION, P.PACKAGEVERSION) PACKAGEVERSION,
         PR.NAME_NM PRODUCT_NM,        
         PR.CODE_NM PRODUCTCODE_NM,
		 PR.SALEVAT_RT,
         PR.UNIT,
         PLU.PLU1, PLU.PLU2, PLU.PLU3,           
         PF.CATEGORY_NM, PT.SUBGROUP_NM,
		 CASE WHEN (P2.PACKAGE != 1 AND P2.PRICE_AMT IS NOT NULL)
					OR 
					P2.PRICE_AMT != P.PRICE_AMT THEN 'Y' ELSE 'N' END PACKAGEPRODUCT 
    FROM #CURRENTPRICES P (NOLOCK)
    JOIN PRD_PRODUCT PR (NOLOCK) ON P.PRODUCT=PR.PRODUCTID
    JOIN #PLU PLU ON PR.PRODUCTID = PLU.PRODUCT
	LEFT JOIN PRC_PRODUCT P2 (NOLOCK) ON P2.PACKAGE = @PackageId AND P.PRODUCT = P2.PRODUCT AND P2.DELETED_FL = 'N'
    LEFT JOIN PRD_SUBGROUP PT ON PR.SUBGROUP = PT.SUBGROUPID
    LEFT JOIN PRD_CATEGORY PF ON PT.CATEGORY = PF.CATEGORYID
   WHERE P.DELETED_FL = 'N'
     AND P.PACKAGE = 1
   ORDER BY COALESCE(P2.UPDATE_DT,  P2.CREATE_DT, P.UPDATE_DT) DESC;

END;