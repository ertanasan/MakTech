CREATE PROCEDURE SLS_LST_STOREPRODUCTSALE_SP @StoreId INT, @CategoryId INT AS
BEGIN

	DECLARE @today DATE = dbo.STR_GETUSERCURRENTDATE_FN(); -- CAST(GETDATE() AS DATE)
	DECLARE @lastmonth DATE = CAST(DATEADD(MONTH,-1,@today) AS DATE)
	DECLARE @lastyear DATE = CAST(DATEADD(MONTH,-12,@today) AS DATE)

	IF OBJECT_ID('tempdb.dbo.#categoryIds', 'U') IS NOT NULL DROP TABLE #categoryIds;
	IF OBJECT_ID('tempdb.dbo.#currentmonth', 'U') IS NOT NULL DROP TABLE #currentmonth;
	IF OBJECT_ID('tempdb.dbo.#lastmonth', 'U') IS NOT NULL DROP TABLE #lastmonth;
	IF OBJECT_ID('tempdb.dbo.#lastyear', 'U') IS NOT NULL DROP TABLE #lastyear;

	CREATE TABLE #categoryIds ( CATEGORY INT );

	IF @CategoryId = -1
	BEGIN
	INSERT INTO #categoryIds
	SELECT B.CATEGORY 
	FROM (
	 SELECT A.CATEGORY, A.SALE CM_SALE, ROW_NUMBER() OVER (ORDER BY SALE DESC) ROWNO
	   FROM (  
	 SELECT P.CATEGORY, SUM(PRICE) SALE  
	   FROM SLS_STOREDAILYPRODUCT_SYN SD  
	   JOIN PRD_PRODUCT_VW P ON SD.PRODUCT = P.PRODUCTID  
	   JOIN RPT_DATE DT ON SD.TRANSACTION_DT = DT.DATE_DT  
	   JOIN RPT_DATE DT2 ON DT2.YEARMONTH_NO = DT.YEARMONTH_NO  
	  WHERE SD.STORE = @StoreId
	    AND DT2.DATE_DT = @today  
	  GROUP BY P.CATEGORY, P.CATEGORY_NM) A  ) B
	  WHERE B.ROWNO > 4
	END

	ELSE -- @CategoryId != -1
	BEGIN
	INSERT INTO #categoryIds
	SELECT @CategoryId CATEGORY
	END

	SELECT PRODUCTCODE_NM, PRODUCT_NM, SALE / SUM(SALE) OVER (PARTITION BY 1) CM_SALE_PCT, SALE CM_SALE
	  INTO #currentmonth
	  FROM (
	SELECT P.CODE_NM PRODUCTCODE_NM, P.NAME_NM PRODUCT_NM, SUM(PRICE) SALE
	  FROM SLS_STOREDAILYPRODUCT_SYN SD
	  JOIN PRD_PRODUCT_VW P (NOLOCK) ON SD.PRODUCT = P.PRODUCTID
	  JOIN RPT_DATE DT (NOLOCK) ON SD.TRANSACTION_DT = DT.DATE_DT
	  JOIN RPT_DATE DT2 (NOLOCK) ON DT2.YEARMONTH_NO = DT.YEARMONTH_NO
	 WHERE SD.STORE = @StoreId
	   AND DT2.DATE_DT = @today
	   AND P.CATEGORY IN (SELECT CATEGORY FROM #categoryIds)
	 GROUP BY P.CODE_NM, P.NAME_NM) A

	 /*
	SELECT PRODUCTCODE_NM, PRODUCT_NM, SALE / SUM(SALE) OVER (PARTITION BY 1) CM_SALE_PCT, SALE CM_SALE, CUSTOMER CM_CUSTOMER, SALE/CUSTOMER CM_AVGSALE
	  INTO #currentmonth
	  FROM (
	SELECT P.CODE_NM PRODUCTCODE_NM, P.NAME_NM PRODUCT_NM, SUM(PRICE) SALE, COUNT(DISTINCT S.SALEID) CUSTOMER
	  FROM SLS_SALEDETAIL SD (NOLOCK)
	  JOIN SLS_SALE S (NOLOCK) ON SD.SALE = S.SALEID
	  JOIN PRD_PRODUCT_VW P (NOLOCK) ON SD.PRODUCT = P.PRODUCTID
	  JOIN RPT_DATE DT (NOLOCK) ON S.TRANSACTION_DT = DT.DATE_DT
	  JOIN RPT_DATE DT2 (NOLOCK) ON DT2.YEARMONTH_NO = DT.YEARMONTH_NO
	 WHERE S.STORE = @StoreId
	   AND S.CANCELLED_FL = 'N'
	   AND SD.CANCEL_FL = 'N'
	   AND DT2.DATE_DT = @today
	   AND P.CATEGORY IN (SELECT CATEGORY FROM #categoryIds)
	 GROUP BY P.CODE_NM, P.NAME_NM) A */

	SELECT PRODUCTCODE_NM, PRODUCT_NM, SALE / SUM(SALE) OVER (PARTITION BY 1) LM_SALE_PCT, SALE LM_SALE
	  INTO #lastmonth
	  FROM (
	SELECT P.CODE_NM PRODUCTCODE_NM, P.NAME_NM PRODUCT_NM, SUM(PRICE) SALE
	  FROM SLS_STOREDAILYPRODUCT_SYN SD
	  JOIN PRD_PRODUCT_VW P (NOLOCK) ON SD.PRODUCT = P.PRODUCTID
	  JOIN RPT_DATE DT (NOLOCK) ON SD.TRANSACTION_DT = DT.DATE_DT
	  JOIN RPT_DATE DT2 (NOLOCK) ON DT2.YEARMONTH_NO = DT.YEARMONTH_NO
	 WHERE SD.STORE = @StoreId
	   AND DT2.DATE_DT = @lastmonth
	   AND P.CATEGORY IN (SELECT CATEGORY FROM #categoryIds)
	 GROUP BY P.CODE_NM, P.NAME_NM) A

	 /*
	SELECT PRODUCTCODE_NM, PRODUCT_NM, SALE / SUM(SALE) OVER (PARTITION BY 1) LM_SALE_PCT, SALE LM_SALE, CUSTOMER LM_CUSTOMER, SALE/CUSTOMER LM_AVGSALE
	  INTO #lastmonth
	  FROM (
	SELECT P.CODE_NM PRODUCTCODE_NM, P.NAME_NM PRODUCT_NM, SUM(PRICE) SALE, COUNT(DISTINCT S.SALEID) CUSTOMER
	  FROM SLS_SALEDETAIL SD (NOLOCK)
	  JOIN SLS_SALE S (NOLOCK) ON SD.SALE = S.SALEID
	  JOIN PRD_PRODUCT_VW (NOLOCK) P ON SD.PRODUCT = P.PRODUCTID
	  JOIN RPT_DATE DT (NOLOCK) ON S.TRANSACTION_DT = DT.DATE_DT
	  JOIN RPT_DATE DT2 (NOLOCK) ON DT2.YEARMONTH_NO = DT.YEARMONTH_NO
	 WHERE S.STORE = @StoreId
	   AND S.CANCELLED_FL = 'N'
	   AND SD.CANCEL_FL = 'N'
	   AND DT2.DATE_DT = @lastmonth
	   AND P.CATEGORY IN (SELECT CATEGORY FROM #categoryIds)
	 GROUP BY P.CODE_NM, P.NAME_NM) A */

	SELECT PRODUCTCODE_NM, PRODUCT_NM, SALE / SUM(SALE) OVER (PARTITION BY 1) LY_SALE_PCT, SALE LY_SALE
	  INTO #lastyear
	  FROM (
	SELECT P.CODE_NM PRODUCTCODE_NM, P.NAME_NM PRODUCT_NM, SUM(PRICE) SALE
	  FROM SLS_STOREDAILYPRODUCT_SYN SD
	  JOIN PRD_PRODUCT_VW P (NOLOCK) ON SD.PRODUCT = P.PRODUCTID
	  JOIN RPT_DATE DT (NOLOCK) ON SD.TRANSACTION_DT = DT.DATE_DT
	  JOIN RPT_DATE DT2 (NOLOCK) ON DT2.YEARMONTH_NO = DT.YEARMONTH_NO
	 WHERE SD.STORE = @StoreId
	   AND DT2.DATE_DT = @lastyear
	   AND P.CATEGORY IN (SELECT CATEGORY FROM #categoryIds)
	 GROUP BY P.CODE_NM, P.NAME_NM) A

	 /*
	SELECT PRODUCTCODE_NM, PRODUCT_NM, SALE / SUM(SALE) OVER (PARTITION BY 1) LY_SALE_PCT, SALE LY_SALE, CUSTOMER LY_CUSTOMER, SALE/CUSTOMER LY_AVGSALE
	  INTO #lastyear
	  FROM (
	SELECT P.CODE_NM PRODUCTCODE_NM, P.NAME_NM PRODUCT_NM, SUM(PRICE) SALE, COUNT(DISTINCT S.SALEID) CUSTOMER
	  FROM SLS_SALEDETAIL SD (NOLOCK)
	  JOIN SLS_SALE S (NOLOCK) ON SD.SALE = S.SALEID
	  JOIN PRD_PRODUCT_VW P (NOLOCK) ON SD.PRODUCT = P.PRODUCTID
	  JOIN RPT_DATE DT (NOLOCK) ON S.TRANSACTION_DT = DT.DATE_DT
	  JOIN RPT_DATE DT2 (NOLOCK) ON DT2.YEARMONTH_NO = DT.YEARMONTH_NO
	 WHERE S.STORE = @StoreId
	   AND S.CANCELLED_FL = 'N'
	   AND SD.CANCEL_FL = 'N'
	   AND DT2.DATE_DT = @lastyear
	   AND P.CATEGORY IN (SELECT CATEGORY FROM #categoryIds)
	 GROUP BY P.CODE_NM, P.NAME_NM) A */

	SELECT PRODUCTCODE_NM, PRODUCT_NM, 
		   SUM(CM_SALE_PCT) CM_SALE_PCT, SUM(CM_SALE) CM_SALE,
		   SUM(LM_SALE_PCT) LM_SALE_PCT, SUM(LM_SALE) LM_SALE,
		   SUM(LY_SALE_PCT) LY_SALE_PCT, SUM(LY_SALE) LY_SALE
      FROM (
	SELECT PRODUCTCODE_NM, PRODUCT_NM, CM_SALE_PCT, CM_SALE, 0 LM_SALE_PCT, 0 LM_SALE, 0 LY_SALE_PCT, 0 LY_SALE
      FROM #currentmonth
	 UNION ALL
	SELECT PRODUCTCODE_NM, PRODUCT_NM, 0, 0, LM_SALE_PCT, LM_SALE, 0, 0
      FROM #lastmonth
	 UNION ALL
	SELECT PRODUCTCODE_NM, PRODUCT_NM, 0, 0, 0, 0, LY_SALE_PCT, LY_SALE
      FROM #lastyear) A
	 GROUP BY PRODUCTCODE_NM, PRODUCT_NM
	 ORDER BY 3 DESC

END