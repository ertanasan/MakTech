CREATE PROCEDURE WHS_LST_WAYBILL_SP @StoreOrderId BIGINT AS 
BEGIN
	SELECT SO.STOREORDERID, ST.STOREID, ST.STORE_NM, ST.ADDRESS_TXT, SO.SHIPMENT_DT, GDD.PALLET_NO, MINGATHERING_TM, 
		   ROW_NUMBER() OVER (PARTITION BY GDD.PALLET_NO ORDER BY GDD.PALLET_NO, MINGATHERING_TM DESC) ROWNO,
		   B.BARCODE_TXT, P.CODE_NM PRODUCTCODE_NM, P.NAME_NM PRODUCT_NM, P.UNIT,
		   ISNULL(GDD.CONTROL_QTY, SOD.SHIPPED_QTY) * ORDERUNIT_QTY SHIPPED_QTY 
	  FROM WHS_STOREORDER SO
	  JOIN STR_STORE ST ON SO.STORE = ST.STOREID
	  JOIN WHS_STOREORDERDETAIL SOD ON SO.STOREORDERID = SOD.STOREORDER
	  JOIN PRD_PRODUCT P ON SOD.PRODUCT = P.PRODUCTID
	  LEFT JOIN (SELECT PRODUCT, MAX(BARCODE_TXT) BARCODE_TXT FROM PRD_BARCODE GROUP BY PRODUCT) B ON P.PRODUCTID = B.PRODUCT
	  LEFT JOIN (SELECT GD.STOREORDERDETAIL, CASE WHEN GATHERINGTYPE = 1 THEN 'A-' ELSE 'H-' END + CAST(GD.PALLET_NO AS VARCHAR) PALLET_NO, 
						SUM(ISNULL(GD.CONTROL_QTY,0)) CONTROL_QTY, MIN(GATHERING_TM) MINGATHERING_TM
				   FROM WHS_GATHERINGDETAIL GD 
				   JOIN WHS_GATHERING G ON GD.GATHERING = G.GATHERINGID
				  WHERE G.DELETED_FL = 'N'
					AND GD.DELETED_FL = 'N'
				  GROUP BY GD.STOREORDERDETAIL, CASE WHEN GATHERINGTYPE = 1 THEN 'A-' ELSE 'H-' END + CAST(GD.PALLET_NO AS VARCHAR) ) GDD
		ON SOD.STOREORDERDETAILID = GDD.STOREORDERDETAIL
	 WHERE SO.STOREORDERID = @StoreOrderId
	   AND SOD.SHIPPED_QTY > 0
END