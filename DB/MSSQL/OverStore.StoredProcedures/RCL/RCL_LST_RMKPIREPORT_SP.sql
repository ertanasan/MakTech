CREATE PROCEDURE RCL_LST_RMKPIREPORT_SP AS
BEGIN
  IF OBJECT_ID('tempdb.dbo.#stores', 'U') IS NOT NULL  DROP TABLE #stores;  
  IF OBJECT_ID('tempdb.dbo.#mikro', 'U') IS NOT NULL  DROP TABLE #mikro;
  IF OBJECT_ID('tempdb.dbo.#maktech', 'U') IS NOT NULL  DROP TABLE #maktech;
  IF OBJECT_ID('tempdb.dbo.#result', 'U') IS NOT NULL  DROP TABLE #result;
    
  DECLARE @monthStart DATE = DATEADD(m, DATEDIFF(m, 0, GETDATE()-1), 0)
  DECLARE @today DATE = CAST(GETDATE()-1 AS date)
  DECLARE @yesterday DATE = CAST(GETDATE()-2 AS date)
  DECLARE @twodaysago DATE = CAST(GETDATE()-3 AS date)
  -- SELECT @monthStart, @today,  @yesterday,  @twodaysago 

  SELECT ROW_NUMBER() OVER (PARTITION BY D.DATE_DT ORDER BY ST.STOREID) ROWNO, ST.STOREID, ST.STORE_NM, D.DATE_DT, ST.BRANCH  
    INTO #stores  
    FROM STR_STORE ST  
    JOIN RPT_DATE D ON D.DATE_DT BETWEEN ST.OPENING_DT AND ISNULL(ST.CLOSING_DT, CONVERT(DATE, '20991231', 112))  
   WHERE (D.DATE_DT BETWEEN @monthStart and @today OR D.DATE_DT IN (@yesterday, @twodaysago))
     AND ST.DELETED_FL = 'N'  
	 -- AND ST.STOREID != 152
   ORDER BY 4 DESC, 1 DESC  

  SELECT sth_giris_depo_no STORE      
	   , RB.BRANCH_NM REGION_NM
       , S.STORE_NM      
       , sth_evrakno_sira STOREORDER      
       , MAX(sth_tarih) SHIPMENT_DT      
    INTO #mikro      
    FROM MIK_TRANSACTION_VW MQ      
    JOIN PRD_PRODUCT P ON MQ.sth_stok_kod COLLATE Turkish_100_CI_AS = P.CODE_NM      
    JOIN STR_STORE S ON MQ.sth_giris_depo_no = S.STOREID   
	LEFT JOIN ORG_BRANCH B ON S.BRANCH = B.BRANCHID
	LEFT JOIN ORG_BRANCH RB ON B.PARENT = RB.BRANCHID
   WHERE sth_evraktip = 2 AND sth_evrakno_seri = 'OMS'      
     AND (sth_tarih BETWEEN @monthStart and @today OR sth_tarih IN (@yesterday, @twodaysago))
   GROUP BY sth_giris_depo_no, RB.BRANCH_NM, S.STORE_NM, sth_evrakno_sira

  SELECT SO.STOREORDERID, ST.STOREID STORE, ST.STORE_NM, SOH2.HISTORY_TM INTAKE_TM
	INTO #maktech      
    FROM WHS_STOREORDER SO 
	JOIN STR_STORE ST ON SO.STORE = ST.STOREID
	JOIN #mikro M ON SO.STOREORDERID = M.STOREORDER      
    JOIN (SELECT STOREORDER, HISTORY_TM, U.USERFULL_NM, ROW_NUMBER() OVER (PARTITION BY STOREORDER ORDER BY HISTORY_TM DESC) ROWNO      
			FROM WHS_STOREORDERHISTORY H      
			JOIN SEC_USER U ON H.CREATEUSER = U.USERID      
		   WHERE STATUS = 5) SOH2 ON SO.STOREORDERID = SOH2.STOREORDER AND SOH2.ROWNO = 1      
   WHERE SO.STATUS = 5          

  SELECT *
    INTO #result
	FROM (
  SELECT 'MUTABAKAT' GROUP_NM, S.STORE_NM, RB.BRANCH_NM REGION_NM, S.DATE_DT
	   , CASE WHEN R.STORE IS NOT NULL THEN 1 ELSE 0 END STATUS_CD
    FROM #stores S  
	LEFT JOIN ORG_BRANCH B ON S.BRANCH = B.BRANCHID
	LEFT JOIN ORG_BRANCH RB ON B.PARENT = RB.BRANCHID
    LEFT JOIN RCL_STORE R ON S.STOREID = R.STORE AND S.DATE_DT = R.RECONCILIATION_DT AND R.DELETED_FL = 'N' AND R.COMPLETE_FL = 'Y' 
   UNION ALL
  SELECT 'MAL KABUL', M.STORE_NM, M.REGION_NM, M.SHIPMENT_DT
	   , CASE WHEN K.STOREORDERID IS NOT NULL AND DATEDIFF(DAY, M.SHIPMENT_DT, k.INTAKE_TM) <= 2 THEN 1 ELSE 0 END
    FROM #mikro m
	LEFT JOIN #maktech k ON M.STOREORDER = K.STOREORDERID
   UNION ALL
  SELECT 'SONDAJ', ST.STORE_NM, RB.BRANCH_NM, S.PLANNED_DT
	   , CASE WHEN T.STORE IS NOT NULL THEN 1 ELSE 0 END
    FROM WHS_STOCKTAKINGSCHEDULE S 
    JOIN STR_STORE ST ON S.STORE = ST.STOREID
	LEFT JOIN ORG_BRANCH B ON ST.BRANCH = B.BRANCHID
	LEFT JOIN ORG_BRANCH RB ON B.PARENT = RB.BRANCHID
    LEFT JOIN (SELECT DISTINCT STOCKTAKINGSCHEDULE, STORE FROM WHS_STOCKTAKING WHERE UPDATE_DT IS NOT NULL AND COUNTINGVALUE_AMT > 0) T ON S.STOCKTAKINGSCHEDULEID = T.STOCKTAKINGSCHEDULE
   WHERE COUNTINGTYPE = 2 
     AND S.DELETED_FL = 'N' 
	 AND (PLANNED_DT BETWEEN @monthStart and @today OR PLANNED_DT IN (@yesterday, @twodaysago))
     -- AND ST.STOREID != 152
	 AND PLANNED_DT BETWEEN ST.OPENING_DT AND ISNULL(ST.CLOSING_DT, CONVERT(DATE, '20991231', 112))) A;

  WITH FINDROWNO AS (
  SELECT *, ROW_NUMBER() OVER (ORDER BY REGION_NM, STORE_NM) ROWNO
    FROM (SELECT DISTINCT REGION_NM, STORE_NM FROM #result) A) 
  SELECT R.REGION_NM, R.STORE_NM, GROUP_NM, F.ROWNO
	   , SUM(CASE WHEN DATE_DT BETWEEN @monthStart and @today AND STATUS_CD = 1 THEN 1 ELSE 0 END) MONTH_OK
	   , SUM(CASE WHEN DATE_DT BETWEEN @monthStart and @today AND STATUS_CD = 0 THEN 1 ELSE 0 END) MONTH_NOTOK
	   , SUM(CASE WHEN DATE_DT = @twodaysago AND STATUS_CD = 0 THEN 1 ELSE 0 END) TWODAYSAGO	
	   , SUM(CASE WHEN DATE_DT = @yesterday AND STATUS_CD = 0 THEN 1 ELSE 0 END) YESTERDAY
	   , SUM(CASE WHEN DATE_DT = @today AND STATUS_CD = 0 THEN 1 ELSE 0 END) TODAY
    FROM #result R  
	JOIN FINDROWNO F ON R.STORE_NM = F.STORE_NM 
   GROUP BY R.REGION_NM, R.STORE_NM, GROUP_NM, F.ROWNO
END