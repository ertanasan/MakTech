CREATE PROCEDURE WHS_INS_TOCSTOREORDERNEW_SP @StoreId INT AS
BEGIN

	-- DECLARE @StoreID INT = 30
	DECLARE @today DATE, @giveOrder INT, @ShipmentDay DATE, @schedule VARCHAR(100)
	DECLARE @StoreName VARCHAR(100)
	SET @today = CAST(GETDATE()-0.25 AS DATE);
	
	IF OBJECT_ID('tempdb..#storedays') IS NOT NULL DROP TABLE #storedays

	SELECT @schedule = SCHEDULE_TXT FROM WHS_SHIPMENTSCHEDULE WHERE STORE = @StoreId
	
	SELECT * 
	  INTO #storedays
	  FROM (
	SELECT 1 DAYOFWEEKNO WHERE SUBSTRING(@schedule,1,1) = 1 UNION ALL
	SELECT 2 WHERE SUBSTRING(@schedule,3,1) = 1 UNION ALL
	SELECT 3 WHERE SUBSTRING(@schedule,5,1) = 1 UNION ALL
	SELECT 4 WHERE SUBSTRING(@schedule,7,1) = 1 UNION ALL
	SELECT 5 WHERE SUBSTRING(@schedule,9,1) = 1 UNION ALL
	SELECT 6 WHERE SUBSTRING(@schedule,11,1) = 1 UNION ALL
	SELECT 7 WHERE SUBSTRING(@schedule,13,1) = 1 ) A

	SELECT @giveOrder = COUNT(*)
	  FROM RPT_DATE
	 WHERE DATE_DT = DATEADD(DAY, 2, @today)
	   AND DAYOFWEEK_NO IN (SELECT DAYOFWEEKNO FROM #storedays)

	IF @giveOrder > 0
	BEGIN

		SELECT @ShipmentDay = MIN(DATE_DT) 
		  FROM RPT_DATE
		 WHERE DATE_DT > @today
		   AND DAYOFWEEK_NO IN (SELECT DAYOFWEEKNO FROM #storedays)

		SELECT @StoreName = STORE_NM FROM STR_STORE WHERE STOREID = @StoreId

		DECLARE @OrderId BIGINT
		DECLARE @OrderCode VARCHAR(200) = @StoreName + '-' + CONVERT(CHAR(8), @today, 112)
		EXEC WHS_INS_STOREORDER_SP @OrderId output, 1, 1, @StoreId, @OrderCode, 2, @today, @ShipmentDay

		INSERT INTO WHS_STOREORDERDETAIL
		( EVENT, ORGANIZATION, DELETED_FL, CREATE_DT, CREATEUSER, CREATECHANNEL, CREATEBRANCH, CREATESCREEN, 
		  PRODUCT, ORDER_QTY, REVISED_QTY, SHIPPED_QTY, ORDERUNIT_QTY, STOREORDER, INTAKE_QTY)
		SELECT 1, 1, 'N', GETDATE(), 1, 1, 1, 1, PRODUCT, ORDER_QTY, ORDER_QTY, ORDER_QTY, ORDERUNIT_QTY, @OrderId, ORDER_QTY
		  FROM [WHS_ORDERSUGGESTION_FN](@StoreId, @today) O
		
	END

END