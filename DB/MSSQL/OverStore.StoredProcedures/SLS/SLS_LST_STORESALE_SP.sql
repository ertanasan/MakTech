CREATE PROCEDURE SLS_LST_STORESALE_SP @StoreId INT AS
BEGIN

	DECLARE @today DATE = dbo.STR_GETUSERCURRENTDATE_FN(); -- CAST(GETDATE() AS DATE)
	DECLARE @lastmonth DATE = CAST(DATEADD(MONTH,-1,@today) AS DATE)
	DECLARE @lastyear DATE = CAST(DATEADD(MONTH,-12,@today) AS DATE)

	IF OBJECT_ID('tempdb.dbo.#currentmonth', 'U') IS NOT NULL DROP TABLE #currentmonth;
	IF OBJECT_ID('tempdb.dbo.#lastmonth', 'U') IS NOT NULL DROP TABLE #lastmonth;
	IF OBJECT_ID('tempdb.dbo.#lastyear', 'U') IS NOT NULL DROP TABLE #lastyear;
	IF OBJECT_ID('tempdb.dbo.#stockprice', 'U') IS NOT NULL DROP TABLE #stockprice;

	SELECT AVG(SALE) CM_AVGSALE, MAX(SALE) CM_MAXSALE, AVG(CUSTOMER) CM_AVGCUSTOMER, MAX(CUSTOMER) CM_MAXCUSTOMER
		 , SUM(CASE WHEN TRANSACTION_DT = @today THEN SALE ELSE 0 END) TODAYSALE
		 , SUM(CASE WHEN TRANSACTION_DT = @today THEN CUSTOMER ELSE 0 END) TODAYCUSTOMER
	  INTO #currentmonth
	  FROM (
	SELECT TRANSACTION_DT, SUM(TOTAL_AMT) SALE, COUNT(*) CUSTOMER
	  FROM SLS_SALE S
	  JOIN RPT_DATE DT ON S.TRANSACTION_DT = DT.DATE_DT
	  JOIN RPT_DATE DT2 ON DT2.YEARMONTH_NO = DT.YEARMONTH_NO
	 WHERE STORE = @StoreId
	   AND CANCELLED_FL = 'N'
	   AND DT2.DATE_DT = @today
	 GROUP BY TRANSACTION_DT) A

	SELECT AVG(SALE) LM_AVGSALE, MAX(SALE) LM_MAXSALE, AVG(CUSTOMER) LM_AVGCUSTOMER, MAX(CUSTOMER) LM_MAXCUSTOMER
	  INTO #lastmonth
	  FROM (
	SELECT TRANSACTION_DT, SUM(TOTAL_AMT) SALE, COUNT(*) CUSTOMER
	  FROM SLS_SALE S
	  JOIN RPT_DATE DT ON S.TRANSACTION_DT = DT.DATE_DT
	  JOIN RPT_DATE DT2 ON DT2.YEARMONTH_NO = DT.YEARMONTH_NO
	 WHERE STORE = @StoreId
	   AND CANCELLED_FL = 'N'
	   AND DT2.DATE_DT = @lastmonth
	 GROUP BY TRANSACTION_DT) A

	SELECT AVG(SALE) LY_AVGSALE, MAX(SALE) LY_MAXSALE, AVG(CUSTOMER) LY_AVGCUSTOMER, MAX(CUSTOMER) LY_MAXCUSTOMER
	  INTO #lastyear
	  FROM (
	SELECT TRANSACTION_DT, SUM(TOTAL_AMT) SALE, COUNT(*) CUSTOMER
	  FROM SLS_SALE S
	  JOIN RPT_DATE DT ON S.TRANSACTION_DT = DT.DATE_DT
	  JOIN RPT_DATE DT2 ON DT2.YEARMONTH_NO = DT.YEARMONTH_NO
	 WHERE STORE = @StoreId
	   AND CANCELLED_FL = 'N'
	   AND DT2.DATE_DT = @lastyear
	 GROUP BY TRANSACTION_DT) A

	SELECT SUM(STOCK*PR.PRICE) STOCKPRICE
	  INTO #stockprice
	  FROM INV_CURRENTSTOCK CS
	  JOIN (SELECT COALESCE(10000+SG.STOCKGROUP, PRODUCT) PRODUCT, MIN(PRICE_AMT) PRICE
			  FROM PRC_PRODUCT P
			  LEFT JOIN PRD_STOCKGROUP_VW SG ON P.PRODUCT = SG.PRODUCTID AND SG.USAGETYPE_CD = 1
			 WHERE PACKAGE = 1 
			 GROUP BY COALESCE(10000+SG.STOCKGROUP, PRODUCT)) PR ON CS.PRODUCT = PR.PRODUCT
	  LEFT JOIN PRD_PROPERTY PP ON CS.PRODUCT = PP.PRODUCT AND PP.PROPERTYTYPE = 6
	 WHERE CS.STORE = @StoreId
	   AND PP.PRODUCT IS NULL
 
	select *
	  from #currentmonth, #lastmonth, #lastyear, #stockprice
END