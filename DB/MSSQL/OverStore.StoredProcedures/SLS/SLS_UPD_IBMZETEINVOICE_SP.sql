CREATE PROCEDURE SLS_UPD_IBMZETEINVOICE_SP AS 
BEGIN
	
	IF OBJECT_ID('tempdb..#IBMFIX') IS NOT NULL DROP TABLE #IBMFIX
	
	SELECT Z.STOREID, Z.DATE_DT, Z.RECEIPT_AMT, Z.REFUND_AMT, Z.ZETRECEIPT_AMT, Z.ZETREFUND_AMT, Z.DIFF, SUM(S.TOTAL_AMT) SALETOTAL
	  INTO #IBMFIX
	  FROM SLS_SALEZETCOMPARE_VW Z 
	  JOIN SLS_SALE S ON S.STORE = Z.STOREID AND S.TRANSACTION_DT = Z.DATE_DT
	  JOIN SLS_SALECUSTOMER SC ON SC.SALE = S.SALEID
	 WHERE TERMINAL = 'Toshiba'
	   AND DATE_DT > (SELECT LAST_DT FROM ACC_MONTHCLOSE)
	   AND DIFF > 0 
	   AND ZETRECEIPT_AMT IS NOT NULL
	   AND S.CANCELLED_FL = 'N'
	 GROUP BY Z.STOREID, Z.DATE_DT, Z.RECEIPT_AMT, Z.REFUND_AMT, Z.ZETRECEIPT_AMT, Z.ZETREFUND_AMT, Z.DIFF
	 HAVING ABS(Z.DIFF - SUM(S.TOTAL_AMT)) < 0.1;

	WITH UPDATELIST AS (
	SELECT S.TRANSACTION_DT, S.STORE, S.CASHREGISTER, SUM(S.TOTAL_AMT) SLPNEW_AMT, COUNT(*) SLPNEW_CNT
	  FROM SLS_SALECUSTOMER SC
	  JOIN SLS_SALE S ON SC.SALE = S.SALEID AND S.CANCELLED_FL = 'N'
	  JOIN #IBMFIX I ON S.STORE = I.STOREID AND S.TRANSACTION_DT = I.DATE_DT
	 GROUP BY S.TRANSACTION_DT, S.STORE, S.CASHREGISTER),
	 ZLIST AS (
	SELECT S.*, Z.SALEZETID, Z.SLPTOTAL_AMT, Z.SLP_CNT, 
		   ROW_NUMBER() OVER (PARTITION BY Z.STORE, Z.TRANSACTION_DT, Z.CASHREGISTER ORDER BY Z.ZET_NO DESC) ROWNO
	  FROM UPDATELIST S
	  LEFT JOIN SLS_SALEZET Z ON Z.STORE = S.STORE AND Z.TRANSACTION_DT = S.TRANSACTION_DT AND Z.CASHREGISTER = S.CASHREGISTER )
	UPDATE SZ SET SZ.SLPTOTAL_AMT = SZ.SLPTOTAL_AMT + SLPNEW_AMT, SZ.SLP_CNT = SZ.SLP_CNT + SLPNEW_CNT, UPDATE_DT = GETDATE(), UPDATEUSER = 4
	 -- SELECT *
	   FROM ZLIST Z
	   JOIN SLS_SALEZET SZ ON Z.SALEZETID = SZ.SALEZETID
	 WHERE Z.ROWNO = 1

END