CREATE PROCEDURE WHS_LST_STOREORDERDETAIL_SP @StoreOrderId INT AS  
BEGIN

	-- Shipped in last 48 hours
	IF OBJECT_ID('tempdb..#onwayProducts') IS NOT NULL DROP TABLE #onwayProducts
	IF OBJECT_ID('tempdb..#products') IS NOT NULL DROP TABLE #products
	IF OBJECT_ID('tempdb..#saleAvg') IS NOT NULL DROP TABLE #saleAvg

	SET NOCOUNT OFF
	DECLARE @storeId INT, @status INT;
	SELECT @storeId = STORE, @status = [STATUS] FROM WHS_STOREORDER WHERE STOREORDERID = @StoreOrderId

	IF @@ROWCOUNT = 0 
	BEGIN
		SET NOCOUNT ON;
        THROW 100001, 'Order not found', 1;
        RETURN;
	END
	SET NOCOUNT ON;

	DECLARE @twodaysago DATE
	SET @twodaysago = CAST(DATEADD(DAY, -2, GETDATE()) AS DATE)
	SELECT D.PRODUCT, SUM(D.SHIPPED_QTY) ONWAY_QTY
	  INTO #onwayProducts
	  FROM WHS_STOREORDERDETAIL (NOLOCK) D
	  JOIN WHS_STOREORDER(NOLOCK) M ON D.STOREORDER = M.STOREORDERID
	 WHERE M.STATUS = 4
	   AND M.SHIPMENT_DT >= @twodaysago
	   AND M.STORE = @storeId
	   AND D.DELETED_FL = 'N'
	 GROUP BY D.PRODUCT;

	SELECT PRODUCT INTO #bannedProducts FROM PRD_PROPERTY (NOLOCK) WHERE PROPERTYTYPE = 4 AND VALUE_TXT = '1'  

	-- günlük ortalama satış miktarı
	DECLARE @startDate DATE = CAST(GETDATE()-8 AS DATE)
	SELECT PRODUCT, SUM(QUANTITY) / COUNT(DISTINCT TRANSACTION_DT) SALEAVG
	  INTO #saleAvg
	  FROM SLS_STOREDAILYPRODUCT_SYN
	 WHERE STORE = @storeId
	   AND TRANSACTION_DT >= @startDate
     GROUP BY PRODUCT

	SELECT P.PRODUCTID, P.CODE_NM, SCALECODE_NM, C.CATEGORY_NM, SG.SUBGROUP_NM, P.NAME_NM, S.PACKAGE_QTY,  PT.PACKAGETYPE_NM, 
		   CASE P.UNIT WHEN 1 THEN 'KG' ELSE 'Adet' END UNIT_NM, P.LOADORDER_TXT, ONWAY_QTY, PR.PRICE_AMT, P.WEIGHT_AMT, 
		   CASE WHEN P.ACTIVE_FL = 'Y' AND PACKAGE_QTY != 0 AND P.SUPERGROUP3 NOT IN (1,3) AND P.DELETED_FL = 'N' THEN 1 ELSE 0 END ELIGIBLE,
		   SA.SALEAVG
	  INTO #products
	  FROM PRD_PRODUCT (NOLOCK) P
	  JOIN WHS_PRODUCTSHIPMENTUNIT (NOLOCK) S ON P.PRODUCTID = S.PRODUCT AND S.SHIPMENTTYPE = 1
	  JOIN WHS_PACKAGETYPE (NOLOCK) PT ON S.PACKAGETYPE = PT.PACKAGETYPEID
	  LEFT JOIN PRC_ACTIVEPACKAGEPRICES_VW PR ON P.PRODUCTID = PR.PRODUCT AND PR.PACKAGE = 1
	  LEFT JOIN PRD_SUBGROUP (NOLOCK) SG ON P.SUBGROUP = SG.SUBGROUPID
	  LEFT JOIN PRD_CATEGORY (NOLOCK) C ON SG.CATEGORY = C.CATEGORYID
	  LEFT JOIN #onwayProducts OW ON P.PRODUCTID = OW.PRODUCT
	  LEFT JOIN (SELECT PRODUCT, MAX(SUBSTRING(BARCODE_TXT,4,10)) SCALECODE_NM 
				   FROM PRD_BARCODE (NOLOCK) WHERE BARCODE_TXT LIKE '290%' AND BARCODETYPE = 1 
				  GROUP BY PRODUCT) B ON P.PRODUCTID = B.PRODUCT
	  LEFT JOIN #saleAvg SA ON P.PRODUCTID = SA.PRODUCT
	   
    SELECT S.STOREORDERDETAILID,  
           S.EVENT,  
           S.ORGANIZATION,  
           S.DELETED_FL,  
           S.CREATE_DT,  
           S.UPDATE_DT,  
           S.CREATEUSER,  
           S.UPDATEUSER,  
           S.CREATECHANNEL,  
           S.CREATEBRANCH,  
           S.CREATESCREEN,  
           COALESCE(S.PRODUCT, P.PRODUCTID) PRODUCT,  
           S.ORDER_QTY,  
           S.REVISED_QTY,  
           S.SHIPPED_QTY,  
		   S.INTAKE_QTY,
		   S.SUGGESTION_QTY,
           COALESCE(S.ORDERUNIT_QTY, P.PACKAGE_QTY) ORDERUNIT_QTY,  
           @StoreOrderId STOREORDER,
		   P.CODE_NM PRODUCTCODE_NM,
		   P.NAME_NM PRODUCT_NM,
		   P.SUBGROUP_NM,
		   P.CATEGORY_NM,
		   P.SCALECODE_NM,
		   P.PACKAGE_QTY,  
		   P.PACKAGETYPE_NM, 
		   P.UNIT_NM, 
		   P.LOADORDER_TXT,
		   P.PRICE_AMT,
		   P.ONWAY_QTY,
		   P.WEIGHT_AMT,
		   CASE WHEN BP.PRODUCT IS NOT NULL THEN 'Y' ELSE 'N' END CLOSETOORDER_FL,
		   SALEAVG
	  FROM #products p
	  LEFT JOIN WHS_STOREORDERDETAIL(NOLOCK) S ON S.STOREORDER = @StoreOrderId AND p.PRODUCTID = S.PRODUCT AND S.DELETED_FL = 'N'
	  LEFT JOIN #bannedProducts BP ON P.PRODUCTID = BP.PRODUCT
	 WHERE ((BP.PRODUCT IS NULL AND P.ELIGIBLE = 1) OR ISNULL(S.ORDER_QTY,0) > 0)
	 ORDER BY 
		CASE WHEN S.SHIPPED_QTY > 0 THEN 1 ELSE 0 END DESC, P.LOADORDER_TXT;
	 -- CASE WHEN S.ORDER_QTY > 0 THEN 2 WHEN S.SUGGESTION_QTY > 0 THEN 1 ELSE 0 END DESC,
	 -- CASE WHEN S.ORDER_QTY > 0 THEN S.ORDER_QTY * P.PRICE_AMT ELSE S.SUGGESTION_QTY * P.PRICE_AMT END DESC;

    
END;  
