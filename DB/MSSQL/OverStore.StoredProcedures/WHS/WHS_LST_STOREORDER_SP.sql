CREATE PROCEDURE [dbo].[WHS_LST_STOREORDER_SP]  @AllRecords VARCHAR(1) = 'N', @BaseDate DATE = NULL  AS
BEGIN

	IF OBJECT_ID('tempdb.dbo.#STORES', 'U') IS NOT NULL DROP TABLE #STORES;
	IF OBJECT_ID('tempdb.dbo.#ORDERS', 'U') IS NOT NULL DROP TABLE #ORDERS;

	SET @BaseDate = COALESCE(@BaseDate, CAST(GETDATE() - 15 AS DATE));

	SELECT * INTO #STORES FROM dbo.STR_GETUSERSTORES_FN();

	DECLARE @storeCount INT;
	SELECT @storeCount = COUNT(*) FROM #stores;

	DECLARE @today DATE;
	SET @today = GETDATE();

	WITH AUTHLEVEL AS (
		SELECT USERID, USER_NM, CASE WHEN AdminRole=1 THEN 4 WHEN ManagerRole = 1 THEN 3 WHEN ITRole = 1 THEN 2 WHEN RegionRole = 1 THEN 1 ELSE 0 END AUTHLEVEL_CD
		  FROM (
		SELECT U.USERID, U.USER_NM
			 , SUM(CASE WHEN G.GROUP_NM = 'System Administrators' THEN 1 ELSE 0 END) AdminRole
			 , SUM(CASE WHEN G.GROUP_NM = 'Genel Müdür' THEN 1 ELSE 0 END) ManagerRole
			 , SUM(CASE WHEN G.GROUP_NM = 'Bilgi Sistemleri Kullanıcıları' THEN 1 ELSE 0 END) ITRole
			 , SUM(CASE WHEN G.GROUP_NM = 'Bölge Sorumluları' THEN 1 ELSE 0 END) RegionRole
		  FROM SEC_USER U (NOLOCK)
		  JOIN SEC_GROUPUSER GU (NOLOCK) ON U.USERID = GU.MEMBERUSER
		  JOIN SEC_GROUP G (NOLOCK) ON GU.CONTAINERGROUP = G.GROUPID
		 WHERE U.DELETED_FL = 'N'
		 GROUP BY U.USERID, U.USER_NM) A ),
		ORDERVALUE AS (
		SELECT STOREORDER, SUM(SD.SHIPPED_QTY * SD.ORDERUNIT_QTY * P.PRICE_AMT) ORDERVALUE_AMT
		  FROM WHS_STOREORDERDETAIL SD 
		  JOIN (SELECT PRODUCT, PRICE_AMT FROM PRC_PRODUCT WHERE PACKAGE = 1 AND DELETED_FL = 'N' ) P ON SD.PRODUCT = P.PRODUCT
		 WHERE SD.DELETED_FL = 'N'
		 GROUP BY STOREORDER)
    SELECT
           S.STOREORDERID,
           S.EVENT,
           S.ORGANIZATION,
           S.DELETED_FL,
           S.CREATE_DT,
           S.UPDATE_DT,
           S.CREATEUSER,
           S.UPDATEUSER,
           S.CREATECHANNEL,
           S.CREATEBRANCH,
           S.CREATESCREEN,
           S.STORE,
           S.ORDERCODE_NM,
           S.STATUS,
           CAST(S.ORDER_DT AS DATE) ORDER_DT,
           CAST(S.SHIPMENT_DT AS DATE) SHIPMENT_DT,
		   CASE WHEN S.STATUS = 1 THEN 'Y' ELSE 'N' END APPROVEENABLED_FL,
		   'Y' EDITDETAILSENABLED_FL,
		   CASE WHEN S.STATUS = 2 THEN 'Y' ELSE 'N' END PRINTENABLED_FL,
		   CASE WHEN S.STATUS = 3 THEN 'Y' ELSE 'N' END SHIPMENTENABLED_FL,
		   ST.STORE_NM,
		   ISNULL(AL.AUTHLEVEL_CD, 0) AUTHLEVEL_CD,
		   ISNULL(OV.ORDERVALUE_AMT, 0) ORDERVALUE_AMT
      INTO #ORDERS
      FROM WHS_STOREORDER S (NOLOCK)
	  JOIN #stores ST ON S.STORE = ST.STOREID
	  LEFT JOIN ORDERVALUE OV ON S.STOREORDERID = OV.STOREORDER
	  LEFT JOIN AUTHLEVEL AL ON S.CREATEUSER = AL.USERID
     WHERE S.DELETED_FL = 'N'
	   AND S.ORDER_DT >= @BaseDate
	   AND ((@storeCount = 1 AND (@AllRecords = 'Y' OR S.STATUS < 5)) OR (@AllRecords = 'Y' OR S.STATUS BETWEEN 2 AND 3))
     ORDER BY CASE WHEN S.STATUS = 2 THEN 1 
				   WHEN S.STATUS = 3 THEN 2
				   ELSE 3 END,
			   DATEDIFF(DAY, @today, S.SHIPMENT_DT)

   SELECT S.*, H.FIRSTENTRYUSER, H.FIRSTENTRYTIME, H.LASTAPPROVEUSER, H.LASTAPPROVETIME, H.CONTROLUSER, H.CONTROLTIME, H.DISPATCHUSER, H.DISPATCHTIME
     FROM #ORDERS S
	 LEFT JOIN WHS_ORDERSTATUSHISTORY_VW H (NOLOCK) ON S.STOREORDERID = H.STOREORDER
END;