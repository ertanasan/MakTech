CREATE PROCEDURE [dbo].[RCL_LST_STOREDATE_SP] @StoreId INT = -1, @StartDate DATE, @EndDate DATE AS
BEGIN
	IF OBJECT_ID('tempdb.dbo.#STORES', 'U') IS NOT NULL DROP TABLE #STORES;     
	SELECT * INTO #STORES FROM dbo.STR_GETUSERSTORES_FN();

	DECLARE @EmptyDate DATE = CONVERT(DATE, '20010101', 112);

	WITH INVOICES AS (
	SELECT STORE, TRANSACTION_DT, SUM(ABS(S.TOTAL_AMT)) TOTAL_AMT
	  FROM ACC_INVOICE I
	  JOIN SLS_SALE S ON I.SALE = S.SALEID
	 WHERE S.TRANSACTION_DT BETWEEN @StartDate AND @EndDate
	   AND S.CANCELLED_FL = 'N'
	   AND S.DELETED_FL = 'N'
	   AND I.DELETED_FL = 'N'
	 GROUP BY STORE, TRANSACTION_DT)
	SELECT R.*
		 , CASE WHEN NETOFF_AMT < 0 THEN -1*NETOFF_AMT ELSE 0 END CASHDEFICIT
		 , CASE WHEN NETOFF_AMT > 0 THEN NETOFF_AMT ELSE 0 END CASHSURPLUS
		 , (CURRENTADVANCE_AMT + TOTALOPENEXPENSE_AMT) - DEFINEDADVANCE_AMT CUMULATIVEDIFF
		 , LASTRECONCILIATION_DT
		 , S.STORE_NM
		 , U.USERFULL_NM USER_NM
		 , SR.REGION_NM
		 , SR.REGIONMANAGER_NM
		 , ISNULL(IV.TOTAL_AMT, 0) INVOICETOTAL
	  FROM (SELECT *, SUM(EXPENSE_AMT - EXPENSERETURN_AMT) OVER (PARTITION BY STORE ORDER BY RECONCILIATION_DT ROWS UNBOUNDED PRECEDING) TOTALOPENEXPENSE_AMT,
				   MAX(CASE WHEN COMPLETE_FL = 'Y' THEN RECONCILIATION_DT END) OVER (PARTITION BY STORE) LASTRECONCILIATION_DT
			  FROM RCL_STORE) R
	  JOIN #STORES S ON R.STORE = S.STOREID
	  JOIN SEC_USER U ON U.USERID = COALESCE(R.UPDATEUSER, R.CREATEUSER)
	  LEFT JOIN STR_STOREREGION_VW SR ON R.STORE = SR.STOREID
	  LEFT JOIN INVOICES IV ON R.STORE = IV.STORE AND R.RECONCILIATION_DT = IV.TRANSACTION_DT
	 WHERE (@StoreId = -1 OR R.STORE = @StoreId) 
	   AND R.COMPLETE_FL = 'Y'
	   AND R.DELETED_FL = 'N'
	   AND R.RECONCILIATION_DT >= ISNULL(S.OPENING_DT, @EmptyDate)
	   AND R.RECONCILIATION_DT BETWEEN @StartDate AND @EndDate
	 ORDER BY R.STORE, R.RECONCILIATION_DT
END