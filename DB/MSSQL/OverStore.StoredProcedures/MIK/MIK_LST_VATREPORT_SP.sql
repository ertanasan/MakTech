CREATE PROCEDURE MIK_LST_VATREPORT_SP @StartDate DATE, @EndDate DATE, @StoreId INT = -1 AS
BEGIN

  IF OBJECT_ID('tempdb..#vat') IS NOT NULL DROP TABLE #vat
  IF OBJECT_ID('tempdb..#vatsale') IS NOT NULL DROP TABLE #vatsale
  IF OBJECT_ID('tempdb..#payment') IS NOT NULL DROP TABLE #payment

  SELECT STORE, TRANSACTION_DT, CASHREGISTER, TRANSACTIONTYPE, VAT_RT, SUM(PRICE) TOTAL, SUM(VAT) VAT
    INTO #vat
    FROM (
  SELECT SD.STORE, SD.TRANSACTION_DT, COALESCE(CRC.CASHREGISTERID, S.CASHREGISTER) CASHREGISTER, TRANSACTIONTYPE, S.SALEID, SD.VAT_RT, SUM(SD.PRICE)  PRICE
       , ROUND(SUM(SD.PRICE*SD.VAT_RT/(100+SD.VAT_RT)),2) VAT
    FROM SLS_SALEDETAIL SD
    JOIN STR_STORE ST ON SD.STORE = ST.STOREID
    JOIN SLS_SALE S ON SD.SALE = S.SALEID AND SD.TRANSACTION_DT = S.TRANSACTION_DT AND SD.STORE = S.STORE
    LEFT JOIN STR_CASHREGISTERCROSS CRC ON S.STORE = CRC.STOREID AND S.CASHREGISTER = CRC.SALEPOSID
   WHERE SD.TRANSACTION_DT BETWEEN @StartDate AND @EndDate
     -- AND (ST.ACTIVE_FL = 'Y' OR CAST(ST.CLOSING_DT AS date) BETWEEN @StartDate AND @EndDate)
     AND (@StoreId = -1 OR SD.STORE = @StoreId)
     AND S.CANCELLED_FL = 'N'
     AND SD.CANCEL_FL = 'N'
   GROUP BY SD.STORE, SD.TRANSACTION_DT, COALESCE(CRC.CASHREGISTERID, S.CASHREGISTER), TRANSACTIONTYPE, S.SALEID, SD.VAT_RT) A
   GROUP BY STORE, TRANSACTION_DT, CASHREGISTER, TRANSACTIONTYPE, VAT_RT
       
  SELECT STORE, STORE_NM STORE_NAME, POSID, OKCNO, VAT_RT --, CAST(TRANSACTION_DT AS date) TRANSACTION_DATE
       , SUM(FIS) FIS, SUM(FISKDV) FISKDV, SUM(FATURA) FATURA, SUM(FATURAKDV) FATURAKDV
 	   , SUM(IADE) IADE, SUM(IADEKDV) IADEKDV
	INTO #vatsale
    FROM (
  SELECT v.STORE, CASHREGISTER POSID, CR.GIBDEVICENO_TXT OKCNO, TRANSACTION_DT, VAT_RT
       , ROUND(SUM(CASE WHEN TRANSACTIONTYPE = 1 THEN TOTAL ELSE 0 END),2) FIS
       , ROUND(SUM(CASE WHEN TRANSACTIONTYPE = 1 THEN VAT ELSE 0 END),2) FISKDV
       , ROUND(SUM(CASE WHEN TRANSACTIONTYPE = 2 THEN TOTAL ELSE 0 END),2) FATURA
       , ROUND(SUM(CASE WHEN TRANSACTIONTYPE = 2 THEN VAT ELSE 0 END),2) FATURAKDV
       , ROUND(-1*SUM(CASE WHEN TRANSACTIONTYPE = 5 THEN TOTAL ELSE 0 END),2) IADE
       , ROUND(-1*SUM(CASE WHEN TRANSACTIONTYPE = 5 THEN VAT ELSE 0 END),2) IADEKDV
    FROM #vat v
    JOIN STR_CASHREGISTER CR ON v.CASHREGISTER = CR.CASHREGISTERID
   WHERE (@StoreId = -1 OR v.STORE = @StoreId)
   GROUP BY v.STORE, CASHREGISTER, CR.GIBDEVICENO_TXT, TRANSACTION_DT, VAT_RT) A
    JOIN STR_STORE ST ON A.STORE = ST.STOREID
   GROUP BY STORE, STORE_NM, POSID, OKCNO, VAT_RT -- ,TRANSACTION_DT 
  
  SELECT ST.STOREID, ST.STORE_NM, CR.CASHREGISTERID, CR.GIBDEVICENO_TXT OKCNO, SUM(S.TOTAL_AMT) TOTAL_AMT, SUM(PAID_AMT-REFUND_AMT) CASH_AMT, SUM(CARD_AMT) CARD_AMT
    INTO #payment
    FROM SLS_SALE S (NOLOCK)
    LEFT JOIN STR_CASHREGISTERCROSS CRC ON S.STORE = CRC.STOREID AND S.CASHREGISTER = CRC.SALEPOSID
    JOIN STR_STORE ST (NOLOCK) ON S.STORE = ST.STOREID
    JOIN STR_CASHREGISTER CR (NOLOCK) ON COALESCE(CRC.CASHREGISTERID, S.CASHREGISTER) = CR.CASHREGISTERID
    JOIN SLS_SALEPAYMENT SP (NOLOCK) ON S.SALEID = SP.SALE
   WHERE S.TRANSACTION_DT BETWEEN @StartDate AND @EndDate
     AND S.TRANSACTIONTYPE IN (1,2)
     AND S.CANCELLED_FL = 'N'
   GROUP BY ST.STOREID, ST.STORE_NM, CR.CASHREGISTERID, CR.GIBDEVICENO_TXT;

  WITH VAT AS (
  SELECT STORE, OKCNO, STORE_NAME, POSID, 
		 SUM(CASE WHEN VAT_RT = 0 THEN FIS+FATURA ELSE 0 END) SALE_VAT0,
		 SUM(CASE WHEN VAT_RT = 1 THEN FIS+FATURA ELSE 0 END) SALE_VAT1,
		 SUM(CASE WHEN VAT_RT = 8 THEN FIS+FATURA ELSE 0 END) SALE_VAT8,
		 SUM(CASE WHEN VAT_RT = 18 THEN FIS+FATURA ELSE 0 END) SALE_VAT18,
		 SUM(FIS+FATURA) SALE_TOTAL,
		 SUM(FIS) RECEIPT_TOTAL,
		 SUM(FATURA) INVOICE_TOTAL,
		 SUM(IADE) RETURN_TOTAL
    FROM #vatsale
   GROUP BY STORE, OKCNO, STORE_NAME, POSID)
  SELECT A.OKCNO, A.STORE_NAME, A.POSID, A.SALE_VAT0, A.SALE_VAT1, A.SALE_VAT8, A.SALE_VAT18, 
		 A.SALE_TOTAL, B.CASH_AMT, B.CARD_AMT, A.RECEIPT_TOTAL, A.INVOICE_TOTAL, A.RETURN_TOTAL
    FROM VAT A
	JOIN #payment B ON A.STORE = B.STOREID AND A.POSID = B.CASHREGISTERID
END