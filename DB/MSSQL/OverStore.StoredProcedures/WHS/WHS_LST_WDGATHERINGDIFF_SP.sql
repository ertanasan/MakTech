CREATE PROCEDURE [dbo].[WHS_LST_WDGATHERINGDIFF_SP] @GatheringDate DATE = NULL WITH RECOMPILE AS    
BEGIN  
  
	IF @GatheringDate IS NULL SET @GatheringDate = CAST(GETDATE() AS DATE)  
	DECLARE @nextDate DATE = DATEADD(DAY, 1, @GatheringDate)

	SELECT * INTO #WHSTOCK FROM INV_WAREHOUSESTOCK_VW WHERE @GatheringDate BETWEEN START_DT AND END_DT AND WAREHOUSE = 1001
	
	SELECT *,
		   NOTGATHEREDSTORE_CNT / (NOTGATHEREDSTORE_CNT + GATHEREDSTORE_CNT) NOTGATHEREDSTORE_RATE
	  FROM (
	SELECT CODE_NM PRODUCTCODE, NAME_NM PRODUCTNAME, WS.STOCK CURRENTSROCK,  
		   SUM(CASE WHEN GATHERED_QTY = 0 THEN 1 ELSE 0 END) NOTGATHEREDSTORE_CNT,  
		   SUM(CASE WHEN GATHERED_QTY > 0 THEN 1 ELSE 0 END) GATHEREDSTORE_CNT,  
		   SUM(CASE WHEN GATHERED_QTY = 0 THEN ORDER_QTY ELSE 0 END) NOTGATHERED_QTY,  
		   SUM(CASE WHEN GATHERED_QTY > 0 THEN GATHERED_QTY ELSE 0 END) GATHERED_QTY  
	  FROM (  
	SELECT P.PRODUCTID, P.CODE_NM, P.NAME_NM, STOREORDER,   
		   SUM(GATHERED_QTY*SOD.ORDERUNIT_QTY) GATHERED_QTY,  
		   SUM(ORDER_QTY*SOD.ORDERUNIT_QTY) ORDER_QTY  
	  FROM WHS_GATHERINGDETAIL GD (NOLOCK)
	  JOIN WHS_STOREORDERDETAIL SOD (NOLOCK) ON GD.STOREORDERDETAIL = SOD.STOREORDERDETAILID  
	  JOIN PRD_PRODUCT P (NOLOCK) ON SOD.PRODUCT = P.PRODUCTID  
	 WHERE GATHERING_TM >= @GatheringDate  
	   AND GATHERING_TM < @nextDate
	   AND GD.DELETED_FL = 'N'  
	   AND SOD.DELETED_FL = 'N'  
	 GROUP BY P.PRODUCTID, P.CODE_NM, P.NAME_NM, STOREORDER  
	HAVING SUM(ORDER_QTY) > 0) A  
	  LEFT JOIN #WHSTOCK  WS ON A.PRODUCTID = WS.PRODUCT  
	 GROUP BY CODE_NM, NAME_NM, WS.STOCK) B  
	 ORDER BY NOTGATHEREDSTORE_RATE DESC, NOTGATHEREDSTORE_CNT DESC

END