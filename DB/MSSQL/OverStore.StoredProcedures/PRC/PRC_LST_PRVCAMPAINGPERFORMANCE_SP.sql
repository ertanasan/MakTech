CREATE PROCEDURE PRC_LST_PRVCAMPAINGPERFORMANCE_SP   
@PackageId INT  
, @PriceChangePercentage FLOAT OUT   
, @SaleChangePercentage FLOAT OUT   
, @ProductCount INT OUT  
AS    
BEGIN    
-- SUPPORTING VARIABLES    
DECLARE @Today DATE = GETDATE()      
 , @ReportStartDate DATE    
 , @ReportEndDate DATE    
 , @DayCount INT    
 ;    
    
-- StorePackage TEMP TABLE    
IF OBJECT_ID('tempdb..#tmpSTPACKAGE') IS NOT NULL DROP TABLE #tmpSTPACKAGE;  
IF OBJECT_ID('tempdb..#tmpMAIN') IS NOT NULL DROP TABLE #tmpSTPACKAGE;  
    
SELECT SP.STORE, SP.PACKAGE, SP.START_TM, SP.END_TM    
  , CASE WHEN SP.END_TM >= @Today THEN @Today ELSE SP.END_TM END REPORTEND_TM    
  , CAST(CASE WHEN SP.END_TM >= @Today THEN CAST(@Today AS DATETIME) + 1 - SP.START_TM ELSE SP.END_TM - SP.START_TM END AS INT) DAY_CN     
INTO #tmpSTPACKAGE    
FROM PRC_STOREPACKAGE SP    
WHERE SP.PACKAGE = @PackageId;    
    
-- ASSIGNING SUPPORTING VARIABLES' VALUES    
SET @ReportStartDate = (SELECT MIN(START_TM) FROM #tmpSTPACKAGE);    
    
SET @ReportEndDate = (SELECT MAX(REPORTEND_TM) FROM #tmpSTPACKAGE);    
    
SET @DayCount = CAST(( CAST(@ReportEndDate AS DATETIME) - CAST(@ReportStartDate AS DATETIME) ) AS INT) + 1    
    
SET @ProductCount = COALESCE( (SELECT COUNT(DISTINCT PRODUCT) FROM PRC_PRICECHANGE_VW WHERE PACKAGE = @PackageId), 0);    
    
SET @PriceChangePercentage = COALESCE( (SELECT AVG( (B.CURRENT_PRICE - B.PREVIOUS_PRICE) / B.PREVIOUS_PRICE )    
       FROM (    
       SELECT A.PRODUCT    
        , AVG(CASE WHEN A.PACKAGE = 1 THEN A.PRICE_AMT END) PREVIOUS_PRICE    
        , AVG(CASE WHEN A.PACKAGE = @PackageId THEN A.PRICE_AMT END) CURRENT_PRICE    
       FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY PRODUCT, PACKAGE ORDER BY STARTVERSION DESC) ROWNO    
         FROM PRC_PRICECHANGE_VW     
         WHERE PRODUCT IN (SELECT DISTINCT PRODUCT FROM PRC_PRODUCT WHERE PACKAGE = @PackageId )     
         AND START_DT  <= @ReportStartDate    
         AND PACKAGE IN(1,@PackageId) ) A    
       WHERE A.ROWNO = 1    
       GROUP BY A.PRODUCT) B)
	   , 0);    
    
-- MAIN QUERY      
SELECT CASE WHEN SP.STORE IS NOT NULL THEN '_KAMPANYA_DAHIL' ELSE '_DIGER_MAGAZALAR' END STORE_NM    
  , CAST(COUNT(DISTINCT DP.STORE) AS varchar(3)) + ' MAĞAZA'  PACKAGESTORE_FL    
  , MIN(SP.START_TM) CMPSTART_DT    
  , MAX(SP.END_TM) CMPEND_DT    
  , @ReportStartDate REPORTSTART_DT    
  , @ReportEndDate REPORTEND_DT    
  , @DayCount DAY_CN      
  --, AVG(CASE WHEN SP.STORE IS NOT NULL THEN @PriceChangePercentage ELSE 0.0 END)  PRICECHANGE_AVG    
  , SUM(DP.QUANTITY) QUANTITY_SUM    
  , SUM(DP.PRICE) SALE_SUM    
  , SUM(DP.QUANTITY) / @DayCount / COUNT(DISTINCT DP.STORE) DAILYQUANTITYBYSTORE_AVG    
  , SUM(DP.PRICE) / @DayCount  / COUNT(DISTINCT DP.STORE) DAILYSALEBYSTORE_AVG    
INTO #tmpMAIN  
FROM SLS_STOREDAILYPRODUCT_SYN DP    
 LEFT JOIN #tmpSTPACKAGE SP ON DP.STORE = SP.STORE    
 JOIN STR_STORE ST ON DP.STORE = ST.STOREID AND ST.DELETED_FL = 'N' AND ST.ACTIVE_FL = 'Y' AND ST.OPENING_DT <= @ReportStartDate AND COALESCE(ST.CLOSING_DT, '2029-12-31') >= @Today    
WHERE DP.TRANSACTION_DT BETWEEN @ReportStartDate AND @ReportEndDate    
GROUP BY CASE WHEN SP.STORE IS NOT NULL THEN '_KAMPANYA_DAHIL' ELSE '_DIGER_MAGAZALAR' END    
    
UNION ALL    
    
SELECT ST.STORE_NM   STORE_NM    
  , MAX(CASE WHEN SP.STORE IS NOT NULL THEN 'EVET' ELSE 'HAYIR' END) PACKAGESTORE_FL    
  , MIN(SP.START_TM) CMPSTART_DT    
  , MAX(SP.END_TM) CMPEND_DT    
  , MIN(SP.START_TM) REPORTSTART_DT    
  , MAX(SP.REPORTEND_TM) REPORTEND_DT    
  , COALESCE(MAX(SP.DAY_CN), @DayCount) DAY_CN    
  --, AVG(CASE WHEN SP.STORE IS NOT NULL THEN @PriceChangePercentage ELSE 0.0 END)  PRICECHANGE_AVG    
  , SUM(DP.QUANTITY) QUANTITY_SUM    
  , SUM(DP.PRICE) SALE_SUM    
  , SUM(DP.QUANTITY) / COALESCE(MAX(SP.DAY_CN), @DayCount)  DAILYQUANTITYBYSTORE_AVG    
  , SUM(DP.PRICE) / COALESCE(MAX(SP.DAY_CN), @DayCount)  DAILYSALEBYSTORE_AVG    
FROM SLS_STOREDAILYPRODUCT_SYN DP    
 LEFT JOIN #tmpSTPACKAGE SP ON DP.STORE = SP.STORE    
 JOIN STR_STORE ST ON DP.STORE = ST.STOREID AND ST.DELETED_FL = 'N' AND ST.ACTIVE_FL = 'Y' AND ST.OPENING_DT <= @ReportStartDate AND COALESCE(ST.CLOSING_DT, '2029-12-31') >= @Today    
WHERE DP.TRANSACTION_DT BETWEEN COALESCE(SP.START_TM, @ReportStartDate) AND COALESCE(SP.END_TM, @ReportEndDate)    
GROUP BY ST.STORE_NM;    
  
DECLARE @PackageStoresAverageSale FLOAT, @OtherStoresAverageSale FLOAT;  
SET @PackageStoresAverageSale = (SELECT DAILYSALEBYSTORE_AVG FROM #tmpMAIN WHERE STORE_NM = '_KAMPANYA_DAHIL');  
SET @OtherStoresAverageSale  = (SELECT DAILYSALEBYSTORE_AVG FROM #tmpMAIN WHERE STORE_NM = '_DIGER_MAGAZALAR');  
SET @SaleChangePercentage = COALESCE( (@PackageStoresAverageSale - @OtherStoresAverageSale) / @OtherStoresAverageSale, 0.0);  
  
SELECT * FROM #tmpMAIN  
ORDER BY STORE_NM;  
  
END;