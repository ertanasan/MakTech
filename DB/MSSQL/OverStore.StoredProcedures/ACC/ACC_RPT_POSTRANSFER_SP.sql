CREATE PROCEDURE ACC_RPT_POSTRANSFER_SP @StartDate DATE, @EndDate DATE, @StoreId INT = -1, @ControlCode INT = -1 AS
BEGIN

  IF OBJECT_ID('tempdb.dbo.#RCLCARD', 'U') IS NOT NULL  DROP TABLE #RCLCARD;
  IF OBJECT_ID('tempdb.dbo.#POSDATA', 'U') IS NOT NULL  DROP TABLE #POSDATA;
  IF OBJECT_ID('tempdb.dbo.#STOREDIFF', 'U') IS NOT NULL  DROP TABLE #STOREDIFF;

  SELECT ST.STORE, ST.RECONCILIATION_DT, CD.CARDGROUP_CD, CD.CARDZET_AMT, ROW_NUMBER() OVER (PARTITION BY RECONCILIATION_DT, STORE ORDER BY CARDZET_AMT DESC) ROWNO
    INTO #RCLCARD
    FROM RCL_STORE ST
    JOIN RCL_CARDDIST CD ON ST.STORERECID = CD.STOREREC
   WHERE ST.RECONCILIATION_DT BETWEEN @StartDate AND @EndDate
     AND CD.CARDZET_AMT > 0
  
  SELECT B.*, P.STORE, ST.STORE_NM, ROW_NUMBER() OVER (PARTITION BY B.BLOCKED_DT, P.STORE ORDER BY DEBIT_AMT DESC) ROWNO
    INTO #POSDATA
    FROM ACC_BANKPOSTRAN B (NOLOCK)
    LEFT JOIN STR_POS P (NOLOCK) ON B.POSREF_TXT = P.POSCODE_TXT
    LEFT JOIN STR_STORE ST ON P.STORE = ST.STOREID
   WHERE B.BLOCKED_DT BETWEEN @StartDate AND @EndDate
     AND B.DELETED_FL = 'N'
  
  SELECT ISNULL(A.STORE, B.STORE) STORE, ISNULL(A.BLOCKED_DT, B.RECONCILIATION_DT) DATE_DT, ISNULL(A.DEBIT_AMT,0) - ISNULL(B.CARDZET_AMT,0) STOREDIFF
    INTO #STOREDIFF
    FROM (SELECT STORE, BLOCKED_DT, SUM(DEBIT_AMT) DEBIT_AMT FROM #POSDATA GROUP BY STORE, BLOCKED_DT) A
    FULL OUTER JOIN (SELECT STORE, RECONCILIATION_DT, SUM(CARDZET_AMT) CARDZET_AMT FROM #RCLCARD GROUP BY STORE, RECONCILIATION_DT) B
      ON A.STORE = B.STORE AND A.BLOCKED_DT = B.RECONCILIATION_DT
   WHERE ABS(ISNULL(A.DEBIT_AMT,0) - ISNULL(B.CARDZET_AMT,0)) >= 0.5
  
  SELECT BANK_NM, POSREF_TXT, DATE_DT, STORE_NM, DEBIT_AMT, CARDZET_AMT, CONTROL_TXT, STOREDIFF_AMT
    FROM (
  SELECT PD.BANK, B.BANK_NM, PD.POSREF_TXT, ISNULL(PD.BLOCKED_DT, RC.RECONCILIATION_DT) DATE_DT, PD.DEBIT_AMT, PD.MIKROTRANCODE_TXT, 
		 COALESCE(PD.STORE, RC.STORE) STORE, ST.STORE_NM, COALESCE(PD.ROWNO, RC.ROWNO) ROWNO
	   , RC.CARDZET_AMT
	   , CASE WHEN PD.STORE IS NULL AND PD.BANKPOSTRANID IS NOT NULL THEN 2 WHEN SD.STORE IS NOT NULL THEN 3 ELSE 1 END CONTROL_CD
  	   , CASE WHEN PD.STORE IS NULL AND PD.BANKPOSTRANID IS NOT NULL THEN 'Mağaza tanımsız' WHEN SD.STORE IS NOT NULL THEN 'Mağaza toplamı tutarsız' ELSE 'Tutarlı' END CONTROL_TXT
  	   , ISNULL(SD.STOREDIFF,0) STOREDIFF_AMT
    FROM #POSDATA PD
	FULL JOIN #RCLCARD RC ON PD.BLOCKED_DT = RC.RECONCILIATION_DT AND PD.STORE = RC.STORE AND PD.ROWNO = RC.ROWNO
    LEFT JOIN #STOREDIFF SD ON COALESCE(PD.STORE, RC.STORE) = SD.STORE AND ISNULL(PD.BLOCKED_DT, RC.RECONCILIATION_DT) = SD.DATE_DT
	LEFT JOIN STR_STORE ST ON COALESCE(PD.STORE, RC.STORE) = ST.STOREID
	LEFT JOIN STR_BANK B ON PD.BANK = B.BANKID
   WHERE (@StoreId = -1 OR COALESCE(PD.STORE, RC.STORE) = @StoreId)) A
   WHERE (@ControlCode = -1 OR A.CONTROL_CD = @ControlCode)
   ORDER BY STORE, DATE_DT

END;