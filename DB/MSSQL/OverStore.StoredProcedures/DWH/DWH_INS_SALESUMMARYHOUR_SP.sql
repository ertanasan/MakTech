CREATE PROCEDURE DWH_INS_SALESUMMARYHOUR_SP @YearMonth INT AS
BEGIN

	IF OBJECT_ID('tempdb.dbo.#PRODUCTCOUNT', 'U') IS NOT NULL DROP TABLE #PRODUCTCOUNT;
	IF OBJECT_ID('tempdb.dbo.#SALES', 'U') IS NOT NULL DROP TABLE #SALES;
	IF OBJECT_ID('tempdb.dbo.#SUMMARY', 'U') IS NOT NULL DROP TABLE #SUMMARY;

	SELECT SD.STORE, SD.TRANSACTION_DT, DATEPART(HOUR, S.TRANSACTION_TM) SALEHOUR, COUNT(*) PRODUCT_CNT
	  INTO #PRODUCTCOUNT
	  FROM SLS_SALEDETAIL SD (NOLOCK)
	  JOIN SLS_SALE S (NOLOCK) ON SD.SALE = S.SALEID
	  JOIN RPT_DATE DT (NOLOCK) ON SD.TRANSACTION_DT = DT.DATE_DT
	 WHERE DT.YEARMONTH_NO = @YearMonth
	   AND S.CANCELLED_FL = 'N'
	   AND SD.CANCEL_FL = 'N'
	   AND S.DELETED_FL = 'N'
	   AND SD.DELETED_FL = 'N'
	 GROUP BY SD.STORE, SD.TRANSACTION_DT, DATEPART(HOUR, S.TRANSACTION_TM);


	WITH CANCELS AS (
	SELECT SALEID, SUM(PRICE) CANCELLED_AMT 
	  FROM SLS_CANCELLEDPRODUCTS_SYN (NOLOCK) 
	 WHERE OMITREASON = 0 
	 GROUP BY SALEID)
	SELECT S.TRANSACTION_DT
		 , S.STORE
		 , DATEPART(HOUR, S.TRANSACTION_TM) SALEHOUR
		 , SUM(CASE WHEN S.TRANSACTIONTYPE != 5 AND S.CANCELLED_FL = 'N' THEN S.TOTAL_AMT ELSE 0 END)  [SALE_AMT]
		 , SUM(CASE WHEN S.TRANSACTIONTYPE != 5 AND S.CANCELLED_FL = 'N' THEN 1 ELSE 0 END) [SALE_QTY]       
		 , SUM(CASE WHEN S.TRANSACTIONTYPE = 5 AND S.CANCELLED_FL = 'N' THEN S.TOTAL_AMT ELSE 0 END)  [REFUND_AMT]
		 , SUM(CASE WHEN S.TRANSACTIONTYPE = 5 AND S.CANCELLED_FL = 'N' THEN 1 ELSE 0 END) [REFUND_QTY]
		 , SUM(CASE WHEN ISNULL(SP.CARD_AMT,0) = 0 AND S.CANCELLED_FL = 'N' THEN S.TOTAL_AMT ELSE 0 END) [CASH_AMT]
		 , SUM(CASE WHEN ISNULL(SP.CARD_AMT,0) = 0 AND S.CANCELLED_FL = 'N' THEN 1 ELSE 0 END) [CASH_QTY]
		 , SUM(CASE WHEN ISNULL(SP.CARD_AMT,0) > 0 AND S.CANCELLED_FL = 'N' THEN S.TOTAL_AMT ELSE 0 END) [CARD_AMT]
		 , SUM(CASE WHEN ISNULL(SP.CARD_AMT,0) > 0 AND S.CANCELLED_FL = 'N' THEN 1 ELSE 0 END) [CARD_QTY]
		 , SUM(CASE WHEN S.TRANSACTIONTYPE != 5 THEN ISNULL(CANCELLED_AMT,0) ELSE 0 END) CANCELLED_AMT
		 , SUM(CASE WHEN S.TRANSACTIONTYPE != 5 AND ISNULL(CANCELLED_AMT,0) > 0 THEN 1 ELSE 0 END) CANCELLED_QTY
	  INTO #SALES
	  FROM SLS_SALE S (NOLOCK)
	  JOIN RPT_DATE DT (NOLOCK) ON S.TRANSACTION_DT = DT.DATE_DT
	  LEFT JOIN SLS_SALEPAYMENT SP (NOLOCK) ON S.SALEID = SP.SALE
	  LEFT JOIN CANCELS C ON S.SALEID = C.SALEID
	 WHERE DT.YEARMONTH_NO = @YearMonth
	   AND S.DELETED_FL = 'N'
	   AND SP.DELETED_FL = 'N'
	   AND S.CANCELLED_FL = 'N'
	 GROUP BY S.TRANSACTION_DT, S.STORE, DATEPART(HOUR, S.TRANSACTION_TM)

	SELECT S.*, ISNULL(PC.PRODUCT_CNT, 0) PRODUCT_CNT
	  INTO #SUMMARY
	  FROM #SALES S
	  LEFT JOIN #PRODUCTCOUNT PC ON S.TRANSACTION_DT = PC.TRANSACTION_DT AND S.STORE = PC.STORE AND S.SALEHOUR = PC.SALEHOUR

	INSERT INTO SLS_SALESUMMARYHOUR_SYN
	SELECT A.*    
	  FROM #SUMMARY A
	  LEFT JOIN SLS_SALESUMMARYHOUR_SYN B ON A.TRANSACTION_DT = B.TRANSACTION_DT AND A.STORE = B.STORE AND A.SALEHOUR = B.SALEHOUR
	 WHERE B.TRANSACTION_DT IS NULL
    
	DELETE B
	  FROM #SUMMARY A
	 RIGHT JOIN SLS_SALESUMMARYHOUR_SYN B ON A.TRANSACTION_DT = B.TRANSACTION_DT AND A.STORE = B.STORE AND A.SALEHOUR = B.SALEHOUR
	 WHERE A.TRANSACTION_DT IS NULL
	   AND B.TRANSACTION_DT IN (SELECT DATE_DT FROM RPT_DATE WHERE YEARMONTH_NO = @YearMonth)
      
	UPDATE B
	   SET B.SALE_AMT = A.SALE_AMT
		 , B.SALE_QTY = A.SALE_QTY  
		 , B.REFUND_AMT = A.REFUND_AMT
		 , B.REFUND_QTY = A.REFUND_QTY
		 , B.CASH_AMT = A.CASH_AMT
		 , B.CASH_QTY = A.CASH_QTY
		 , B.CARD_AMT = A.CARD_AMT
		 , B.CARD_QTY = A.CARD_QTY
		 , B.CANCELLED_AMT = A.CANCELLED_AMT
		 , B.CANCELLED_QTY = A.CANCELLED_QTY
		 , B.PRODUCT_CNT = A.PRODUCT_CNT
	  FROM #SUMMARY A
	  JOIN SLS_SALESUMMARYHOUR_SYN B ON A.TRANSACTION_DT = B.TRANSACTION_DT AND A.STORE = B.STORE AND A.SALEHOUR = B.SALEHOUR
	 WHERE B.SALE_AMT != A.SALE_AMT
		OR B.SALE_QTY != A.SALE_QTY
		OR B.REFUND_AMT != A.REFUND_AMT
		OR B.REFUND_QTY != A.REFUND_QTY
		OR B.CASH_AMT != A.CASH_AMT
		OR B.CASH_QTY != A.CASH_QTY
		OR B.CARD_AMT != A.CARD_AMT
		OR B.CARD_QTY != A.CARD_QTY
		OR B.CANCELLED_AMT != A.CANCELLED_AMT
		OR B.CANCELLED_QTY != A.CANCELLED_QTY
		OR B.PRODUCT_CNT != A.PRODUCT_CNT

END