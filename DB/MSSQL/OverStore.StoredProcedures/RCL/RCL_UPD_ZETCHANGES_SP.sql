CREATE PROCEDURE RCL_UPD_ZETCHANGES_SP AS
BEGIN

	IF OBJECT_ID('tempdb.dbo.#UPDATELIST', 'U') IS NOT NULL  DROP TABLE #UPDATELIST;


	WITH INVOICES AS (
	SELECT STORE, TRANSACTION_DT, SUM(ABS(S.TOTAL_AMT)) TOTAL_AMT
	  FROM ACC_INVOICE I
	  JOIN SLS_SALE S ON I.SALE = S.SALEID
	 WHERE S.TRANSACTION_DT >= GETDATE() - 60
	   AND S.CANCELLED_FL = 'N'
	   AND S.DELETED_FL = 'N'
	   AND I.DELETED_FL = 'N'
	   AND S.TRANSACTIONTYPE = 5
	 GROUP BY STORE, TRANSACTION_DT)
	SELECT R.STORERECID, ST.STOREID, ST.STORE_NM, R.RECONCILIATION_DT, R.ZET_AMT, Z.ZETAMOUNT, ISNULL(I.TOTAL_AMT, 0) INVOICETOTAL
	  INTO #UPDATELIST
	  FROM RCL_STORE R
	  JOIN STR_STORE ST ON R.STORE = ST.STOREID
	  JOIN (SELECT STOREID, DATE_DT, ZETRECEIPT_AMT - ISNULL(ZETREFUND_AMT,0) ZETAMOUNT
				   FROM SLS_SALEZETCOMPARE_VW
				  WHERE DATE_DT >= GETDATE() - 60 AND DIFF = 0) Z ON R.STORE = Z.STOREID AND R.RECONCILIATION_DT = Z.DATE_DT
	  LEFT JOIN INVOICES I ON R.STORE = I.STORE AND R.RECONCILIATION_DT = I.TRANSACTION_DT
	 WHERE RECONCILIATION_DT >= GETDATE() - 60
	   AND R.DELETED_FL = 'N'
	   AND COMPLETE_FL = 'Y'
	   AND ABS(ISNULL(R.ZET_AMT, 0)  - ISNULL(Z.ZETAMOUNT, 0) - ISNULL(I.TOTAL_AMT, 0) ) > 5

	BEGIN TRANSACTION

	BEGIN TRY  
		UPDATE R SET R.ZET_AMT = UL.ZETAMOUNT + INVOICETOTAL
		  FROM #UPDATELIST UL
		  JOIN RCL_STORE R ON UL.STORERECID = R.STORERECID

		DECLARE rcl_zet CURSOR FOR   
		SELECT DISTINCT STOREID FROM #UPDATELIST

		DECLARE @storeId INT

		SET NOCOUNT ON  
		OPEN rcl_zet    
		FETCH NEXT FROM rcl_zet INTO @storeId

		WHILE @@FETCH_STATUS = 0    
		BEGIN   
			EXEC RCL_UPD_RECALCULATE_SP @storeId
			FETCH NEXT FROM rcl_zet INTO @storeId
		END

		CLOSE rcl_zet    
		DEALLOCATE rcl_zet
		SET NOCOUNT OFF
		IF @@TRANCOUNT > 0 COMMIT TRANSACTION;
	END TRY  
	BEGIN CATCH 
		IF @@TRANCOUNT > 0  ROLLBACK TRANSACTION;
		THROW;
	END CATCH  

END