CREATE PROCEDURE [dbo].[WHS_LST_STOREORDERSUMMARYREPORT_SP]   
 @StartDate DATE = NULL  
 , @EndDate DATE = NULL   
AS    
BEGIN    
    
   /* Section="Parameter Modification"*/    
   IF @StartDate IS NULL     
   BEGIN    
     SET @StartDate = GETDATE()    
     SET @EndDate = GETDATE()    
   END    
   ELSE IF @EndDate IS NULL    
     SET @EndDate = @StartDate;    
       
	WITH MIKRO AS (    
		SELECT sth_evrakno_sira, sth_stok_kod COLLATE Turkish_100_CI_AS stokkod, SUM(sth_miktar) MIKTAR_MIKRO    
		FROM MIK_TRANSACTION_VW
		WHERE sth_evraktip = 2 AND sth_evrakno_seri = 'OMS'    
		GROUP BY sth_evrakno_sira, sth_stok_kod    
	),  PRODUCTS AS (  
		SELECT P.PRODUCTID  
			, P.CODE_NM [PRODUCT_CODE]   
			, P.NAME_NM [PRODUCT_NAME]      
			, C.CATEGORY_NM  
			, CASE P.UNIT WHEN 1 THEN 'KG' ELSE 'AD' END UNIT_NM  
			, P.PARENT  
			--, COALESCE(PC.PRICE_AMT, PP.PRICE_AMT, PX.PRICE_AMT) UNIT_SALE_PRICE   
			, COALESCE(PP.PRICE_AMT, PX.PRICE_AMT) UNIT_SALE_PRICE  
		FROM PRD_PRODUCT P  
			JOIN PRD_SUBGROUP SG ON P.SUBGROUP = SG.SUBGROUPID     
			JOIN PRD_CATEGORY C ON SG.CATEGORY = C.CATEGORYID  
			-- LEFT JOIN PRC_PRICECHANGE_VW PC ON OD.PRODUCT = PC.PRODUCTID AND PC.PACKAGE = 1 AND (O.SHIPMENT_DT BETWEEN PC.START_DT AND PC.END_DT)    
			LEFT JOIN PRC_PRODUCT PP ON P.PRODUCTID = PP.PRODUCT AND PP.PACKAGE = 1    
			LEFT JOIN PRC_PRODUCT PX ON P.PARENT = PX.PRODUCT AND PX.PACKAGE = 1   
   )  
	SELECT *    
	FROM (SELECT CAST(O.SHIPMENT_DT AS DATE) SHIPMENT_DT    
			, P.PRODUCT_CODE  
			, P.PRODUCT_NAME  
			, P.CATEGORY_NM        
			, P.UNIT_NM  
			, MAX(OD.ORDERUNIT_QTY) ORDERUNIT_QTY    
			, SUM(OD.ORDER_QTY) ORDER_QTY            
			, SUM(OD.SHIPPED_QTY) SHIPPED_QTY    
			, SUM( COALESCE(M.MIKTAR_MIKRO, 0) / OD.ORDERUNIT_QTY) MIKRO_QTY    
			, SUM( (COALESCE(M.MIKTAR_MIKRO, 0) / OD.ORDERUNIT_QTY) - OD.ORDER_QTY) QUANTITY_DIFFERENCE    
			, MAX(P.UNIT_SALE_PRICE) UNIT_SALE_PRICE    
			, CASE WHEN SUM( ( COALESCE(M.MIKTAR_MIKRO, 0) / OD.ORDERUNIT_QTY) - OD.ORDER_QTY) >= 0 THEN NULL ELSE SUM( ( ( COALESCE(M.MIKTAR_MIKRO, 0) / OD.ORDERUNIT_QTY) - OD.ORDER_QTY) * OD.ORDERUNIT_QTY * P.UNIT_SALE_PRICE ) END STOCKOUT_COST    
			, COUNT (DISTINCT O.STORE) ORDERSTORE_CN  
			, COUNT (CASE WHEN COALESCE(M.MIKTAR_MIKRO, 0) = 0 THEN O.STORE END) NONESTORE_CN  
			, COUNT (CASE WHEN (COALESCE(M.MIKTAR_MIKRO, 0) / OD.ORDERUNIT_QTY) - OD.ORDER_QTY < 0 THEN O.STORE END) SHORTSTORE_CN  
		FROM PRODUCTS P  
			JOIN WHS_STOREORDERDETAIL OD (NOLOCK) ON OD.PRODUCT = P.PRODUCTID      
			JOIN WHS_STOREORDER O (NOLOCK) ON OD.STOREORDER = O.STOREORDERID  AND O.DELETED_FL = 'N'          
			JOIN WHS_STOREORDERSTATUS OS ON O.STATUS = OS.STOREORDERSTATUSID AND OS.STOREORDERSTATUSID >= 4    
			LEFT JOIN MIKRO M ON M.stokkod = P.PRODUCT_CODE AND M.sth_evrakno_sira = O.STOREORDERID    
		WHERE OD.DELETED_FL = 'N'    
			AND CAST(O.SHIPMENT_DT AS DATE) BETWEEN @StartDate AND @EndDate    
		GROUP BY  CAST(O.SHIPMENT_DT AS DATE), P.PRODUCT_CODE, P.PRODUCT_NAME, P.CATEGORY_NM, P.UNIT_NM) A    
	ORDER BY (CASE WHEN A.STOCKOUT_COST IS NULL THEN 1 ELSE 0 END), A.STOCKOUT_COST, A.QUANTITY_DIFFERENCE    
                 
END; 