CREATE PROCEDURE [dbo].[MIK_BAT_SALES_SP] @NoZControl INT = 0 AS
BEGIN

	IF OBJECT_ID('tempdb..#STORES') IS NOT NULL DROP TABLE #STORES
	IF OBJECT_ID('tempdb..#MAKTECH') IS NOT NULL DROP TABLE #MAKTECH
	IF OBJECT_ID('tempdb..#mikrotran') IS NOT NULL DROP TABLE #mikrotran

	DECLARE @LastDate DATE 
	SELECT @LastDate = LAST_DT FROM ACC_MONTHCLOSE 
	DECLARE @startDate DATE, @endDate DATE
	SELECT @startDate = DATEADD(DAY, 1, @LastDate)
	SET @endDate = CAST(GETDATE() - 1 AS DATE)

	-- z balansı olan şubeler
	SELECT STOREID, DATE_DT
	  INTO #STORES
	  FROM SLS_SALEZETCOMPARE_VW
	 WHERE DATE_DT BETWEEN @startDate AND @endDate
	   AND (@NoZControl = 1 OR ABS(DIFF) < 0.1)

	-- maktech verileri
	SELECT SD.STORE, SD.TRANSACTION_DT, CASE WHEN S.TRANSACTIONTYPE = 5 THEN 'C' ELSE 'P' END TRANTYPE, SUM(S.COEFF*PRICE) PRICE
	  INTO #MAKTECH
	  FROM SLS_SALEDETAIL SD (NOLOCK)      
	  JOIN (SELECT S.STORE, S.TRANSACTION_TM, S.SALEID, S.CASHREGISTER, S.TRANSACTIONTYPE, CASE WHEN S.TRANSACTIONTYPE = 5 THEN -1 ELSE 1 END COEFF, ROW_NUMBER() OVER (PARTITION BY 1 ORDER BY SALEID) SALEROWNO          
			  FROM SLS_SALE S (NOLOCK)        
			  LEFT JOIN ACC_INVOICE I (NOLOCK) ON S.SALEID = I.SALE AND I.DELETED_FL = 'N'  
			 WHERE S.TRANSACTION_DT BETWEEN @startDate AND @endDate
			   AND S.CANCELLED_FL = 'N'  
			   AND (I.SALE IS NULL OR S.TRANSACTIONTYPE = 5)) S ON SD.SALE = S.SALEID          
	  JOIN PRD_PRODUCT P (NOLOCK) ON SD.PRODUCT = P.PRODUCTID          
	  LEFT JOIN MIK_PRODUCTCROSS PC (NOLOCK) ON SD.PRODUCT = PC.MAKTECH
	 WHERE SD.TRANSACTION_DT BETWEEN @startDate AND @endDate
	   AND SD.CANCEL_FL = 'N'      
	 GROUP BY SD.STORE, SD.TRANSACTION_DT, CASE WHEN S.TRANSACTIONTYPE = 5 THEN 'C' ELSE 'P' END

	-- mikro verileri
	SELECT sth_tarih, sth_evrakno_seri, SUM(sth_tutar+sth_vergi) sth_tutar
	  INTO #mikrotran
	  FROM MIK_TRANSACTION20_SYN
	 WHERE sth_tarih BETWEEN @startDate AND @endDate
	   AND (sth_evrakno_seri like 'P%' OR sth_evrakno_seri like 'C%')
	   AND CAST(CONVERT(VARCHAR, sth_tarih, 112) AS INT) = sth_evrakno_sira
	 GROUP BY sth_tarih, sth_evrakno_seri

	-- tutmayan mağaza günler
	DECLARE MIKSTORES CURSOR FOR     
	SELECT A.STORE, A.TRANSACTION_DT, SUM(PRICE) TOTALAMOUNT
	  FROM #MAKTECH A
	  JOIN #STORES S ON A.STORE = S.STOREID AND A.TRANSACTION_DT = S.DATE_DT
	  FULL OUTER JOIN #mikrotran B ON A.TRANSACTION_DT = B.sth_tarih 
	   AND A.TRANTYPE COLLATE Turkish_CI_AS = LEFT(B.sth_evrakno_seri,1) 
	   AND A.STORE = RIGHT(B.sth_evrakno_seri, 3)
	 WHERE abs(ISNULL(A.PRICE, 0) - ISNULL(B.sth_tutar,0))>1
	   AND A.STORE IS NOT NULL
	 GROUP BY A.STORE, A.TRANSACTION_DT
	 ORDER BY 2, 1

	DECLARE @storeId INT, @Date DATE, @total NUMERIC(22,6), @procAndParam VARCHAR(1000)
  
	SET NOCOUNT ON    
	OPEN MIKSTORES      
	FETCH NEXT FROM MIKSTORES INTO @storeId, @Date, @total
  
	WHILE @@FETCH_STATUS = 0      
	BEGIN     
		BEGIN TRY  
			BEGIN TRANSACTION
			EXEC MIK_INS_SALES_SP @StoreId, @Date
			INSERT INTO MIK_SALEEXPORT VALUES (@StoreId, @Date, GETDATE(), @total) 
			COMMIT TRANSACTION
		END TRY  
		BEGIN CATCH  
			ROLLBACK TRANSACTION
			SET @procAndParam = 'MIK_BAT_SALES_SP ' + CAST(@StoreId AS VARCHAR)+', '+CONVERT(VARCHAR(10), @Date, 104)
			EXEC OSM_INSERTERRORINFO @procAndParam 
		END CATCH; 

		FETCH NEXT FROM MIKSTORES INTO @storeId, @Date, @total
	END  
  
	CLOSE MIKSTORES      
	DEALLOCATE MIKSTORES     
	SET NOCOUNT OFF    

END