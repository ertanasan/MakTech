CREATE PROCEDURE RCL_SEL_LASTRCLDATE_SP @StoreId INT AS
BEGIN

  DECLARE @ROWCOUNT INT
  SELECT @ROWCOUNT = COUNT(*) FROM RCL_STORE WHERE STORE = @StoreId AND COMPLETE_FL = 'Y' AND DELETED_FL = 'N' AND CASH_AMT > 0
  IF @ROWCOUNT = 0 
  BEGIN
    DECLARE @OPENINGRECORD INT
	SELECT @OPENINGRECORD = COUNT(*) FROM RCL_STORE WHERE STORE = @StoreId AND CASH_AMT = 0 AND CARD_AMT = 0
	IF @OPENINGRECORD = 0 
	BEGIN
		INSERT INTO RCL_STORE
		( EVENT, ORGANIZATION, DELETED_FL, CREATE_DT, CREATEUSER, CREATECHANNEL, CREATEBRANCH, CREATESCREEN
		, STORE, RECONCILIATION_DT, ZET_AMT, DEFINEDADVANCE_AMT, EXPENSE_AMT, CASH_AMT, CARD_AMT, RECOVERED_AMT, ADJUSTMENT_AMT, NETOFF_AMT
		, BANK_AMT, CURRENTADVANCE_AMT, EXPENSERETURN_AMT, DIFFREASONCODES_TXT, DIFFREASON_TXT, LASTSTEP_NO, COMPLETE_FL, ADJUSTMENT_DSC, DEFICITCYCLE_CNT)
		SELECT 1, 1, 'N', GETDATE(), dbo.SYS_GETCURRENTUSER_FN(), dbo.SYS_GETCURRENTCHANNEL_FN(), dbo.SYS_GETCURRENTBRANCH_FN(), dbo.SYS_GETCURRENTSCREEN_FN()
			 , STOREID, CAST(OPENING_DT - 0.5 AS DATE), 0, ADVANCE_AMT, 0, 0, 0, 0, 0, 0, 0, ADVANCE_AMT, 0, NULL, NULL, 8, 'Y', NULL, 0
		  FROM STR_STORE
		 WHERE STOREID = @StoreId
	END
	ELSE IF @OPENINGRECORD = 1 
	BEGIN
		UPDATE RST 
		   SET RECONCILIATION_DT = CAST(ST.OPENING_DT - 0.5 AS DATE)
		  FROM RCL_STORE RST
		  JOIN STR_STORE ST ON RST.STORE = ST.STOREID
		 WHERE RST.STORE = @StoreId AND CASH_AMT = 0 AND CARD_AMT = 0 
	END
  END;

  WITH RCLDATE AS 
  (SELECT D.DATE_DT, LEAD(DATE_DT) OVER (ORDER BY DATE_DT) NEXTDATE
     FROM RPT_DATE D
     LEFT JOIN RCL_DAYSOFF O ON D.DATE_DT = O.OFFDAY_DT AND O.STORE = @StoreId 
    WHERE O.OFFDAY_DT IS NULL)
  SELECT TOP 1 *, SUM(EXPENSE_AMT - EXPENSERETURN_AMT) OVER (PARTITION BY STORE ORDER BY RECONCILIATION_DT ROWS UNBOUNDED PRECEDING) TOTALOPENEXPENSE_AMT 
  	   , D.NEXTDATE
    FROM RCL_STORE S
    JOIN RCLDATE D ON S.RECONCILIATION_DT = D.DATE_DT
   WHERE STORE = @StoreId
     AND DELETED_FL = 'N'
     AND COMPLETE_FL = 'Y'
   ORDER BY RECONCILIATION_DT DESC

   
END