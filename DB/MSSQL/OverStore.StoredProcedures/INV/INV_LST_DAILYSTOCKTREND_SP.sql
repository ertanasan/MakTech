CREATE PROCEDURE INV_LST_DAILYSTOCKTREND_SP
	@Store INT,
	@StartDate DATE,
	@EndDate DATE
AS
BEGIN

 SET @EndDate = dbo.STR_GETUSERCURRENTDATE_FN();
 IF OBJECT_ID('tempdb.dbo.#DAILYSTOCK', 'U') IS NOT NULL  DROP TABLE #DAILYSTOCK

 SELECT STORE, PRODUCT, TRANSACTION_DT START_DT,
        ISNULL(DATEADD(DAY,-1,LEAD(TRANSACTION_DT) OVER (PARTITION BY STORE, PRODUCT ORDER BY TRANSACTION_DT)),CONVERT(DATE,'20991231',112)) END_DT,
        SUM(STOCK) OVER (PARTITION BY STORE, PRODUCT ORDER BY TRANSACTION_DT ROWS UNBOUNDED PRECEDING) STOCK
   INTO #DAILYSTOCK
   FROM (
 SELECT STORE, PRODUCT, @StartDate TRANSACTION_DT, STOCK
   FROM INV_STOCKDATE2_FN(@StartDate)   
  WHERE STORE = @Store
  UNION ALL
 SELECT STORE, PRODUCT, CAST(INV.TRANSACTION_DT AS DATE), SUM(QUANTITY_QTY) QUANTITY
   FROM INV_STORETRANSACTIONS_VW INV
  WHERE INV.TRANSACTION_DT > @StartDate
    AND STORE = @Store
  GROUP BY STORE, PRODUCT, INV.TRANSACTION_DT) A;

 SELECT ST.STOREID, ST.STORE_NM, DT.DATE_DT, 
	    SUM(DS.STOCK * SP.PRICE_AMT) STOCKPRICE
   FROM STR_STORE ST
   JOIN RPT_DATE DT ON DT.DATE_DT BETWEEN @StartDate AND @EndDate
   JOIN #DAILYSTOCK DS ON ST.STOREID = DS.STORE AND DT.DATE_DT BETWEEN DS.START_DT AND DS.END_DT
   JOIN PRC_SALEPRICE_VW SP ON DS.PRODUCT = SP.PRODUCT
  WHERE ST.STOREID = @Store
  GROUP BY ST.STOREID, ST.STORE_NM, DT.DATE_DT
  ORDER BY 3

END