CREATE PROCEDURE SLS_FIX_WNCMISSINGDETAILS_SP @StoreId INT, @Date DATE AS
BEGIN
	DECLARE db_cursor CURSOR FOR 
	SELECT S.SALEID, S.TRANSACTION_TXT, S.TOTAL_AMT, ISNULL(SUM(SD.PRICE),0) DETAIL_AMT
	  FROM SLS_SALE S (NOLOCK)
	  LEFT JOIN SLS_SALEDETAIL SD (NOLOCK) ON S.SALEID = SD.SALE AND SD.TRANSACTION_DT = S.TRANSACTION_DT AND SD.STORE = S.STORE AND SD.CANCEL_FL = 'N'
	 WHERE S.TRANSACTION_DT = @Date
	   AND S.STORE = @StoreId
	   AND S.CANCELLED_FL = 'N'
	 GROUP BY S.SALEID, S.TRANSACTION_TXT, S.TOTAL_AMT
	HAVING S.TOTAL_AMT != ISNULL(SUM(SD.PRICE),0)

	DECLARE @saleId BIGINT, @transactiontxt VARCHAR(100), @totalamt NUMERIC(20,6), @detailamt NUMERIC(20,6)
	OPEN db_cursor    
	FETCH NEXT FROM db_cursor INTO @saleId, @transactiontxt, @totalamt, @detailamt 
	 
	WHILE @@FETCH_STATUS = 0    
	BEGIN    
	  IF @detailamt <> 0 
	  BEGIN
	    DELETE FROM SLS_SALEDETAIL WHERE SALE = @saleId
	  END

	  INSERT INTO SLS_SALEDETAIL        
	  (EVENT, ORGANIZATION, DELETED_FL, CREATE_DT, CREATEUSER, CREATECHANNEL, CREATEBRANCH, CREATESCREEN, SALE,            
	  TRANSACTION_TXT, TRANSACTION_DT, BARCODE_TXT, PRODUCT, PRODUCTCODE_NM, STORE, PRICE, VAT_RT, QUANTITY_QTY,            
	  UNIT, CANCEL_FL, UNITPRICE_AMT)            
	  
	  SELECT 1045, 1, 'N', GETDATE(), 1, 1, 1, 1, @saleId, @transactiontxt, @Date, L.SUBST_CODE COLLATE Turkish_100_CI_AS, P.PRODUCTID, P.CODE_NM,             
			 @StoreId, L.TRANSACTION_VALUE, L.VAT_PERCENT, CASE WHEN P.UNIT = 1 THEN L.QUANTITY*1000 ELSE L.QUANTITY END,         
			 P.UNIT, 'N', ROUND(L.TRANSACTION_VALUE/(L.QUANTITY*1.0),CASE WHEN P.UNIT=1 THEN 1 ELSE 2 END)             
        FROM WNC_POSTRANHEADERS H            
        JOIN WNC_POSTRANLINES L ON H.POS_ID = L.POS_ID AND H.TRANSACTION_DATE = L.TRANSACTION_DATE AND H.DOC_PTR = L.DOC_PTR            
    	LEFT JOIN PRD_BARCODE B ON L.SUBST_CODE COLLATE Turkish_100_CI_AS = B.BARCODE_TXT            
        JOIN PRD_PRODUCT P ON COALESCE(B.PRODUCT,326) = P.PRODUCTID         
       WHERE H.BRANCH_CODE = @StoreId
         AND H.TRANSACTION_DATE = @Date
         AND CAST(H.BRANCH_CODE AS VARCHAR(10))+'-'+CAST(H.POS_ID AS VARCHAR(10))+'-'+CONVERT(CHAR(8),H.TRANSACTION_DATE,112)+REPLACE(H.ORJ_TRANSACTION_TIME,':','')+'-'+CAST(H.ID AS VARCHAR(10)) COLLATE Turkish_100_CI_AS = @transactiontxt
	
    
	  FETCH NEXT FROM db_cursor INTO @saleId, @transactiontxt, @totalamt, @detailamt 
	END   
	 
	CLOSE db_cursor    
	DEALLOCATE db_cursor   
END