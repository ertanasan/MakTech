CREATE PROCEDURE PRC_LST_NEWPRICES_SP
 @GroupCode INT, 
 @StoreId INT,
 @Wincor INT AS

BEGIN
            
  -- IF OBJECT_ID('tempdb..#PLU') IS NOT NULL DROP TABLE #PLU
  IF OBJECT_ID('tempdb..#STORES') IS NOT NULL DROP TABLE #STORES
  CREATE TABLE #STORES (STORE INT, BRAND_NM VARCHAR(100), PRICEFILEPATH_TXT VARCHAR(200), CURRENTPRICEVERSION INT, PRIVATEPRICEVERSION INT, CREATEPRICEFILE_FL VARCHAR(1))
  IF @Wincor = 1
    INSERT INTO #STORES
    SELECT STORE, MAX(BRAND_NM) BRAND_NM, MAX(PRICEFILEPATH_TXT) PRICEFILEPATH_TXT
  	     , MIN(CURRENTPRICEVERSION) CURRENTPRICEVERSION, MIN(PRIVATEPRICEVERSION) PRIVATEPRICEVERSION, MAX(CREATEPRICEFILE_FL) CREATEPRICEFILE_FL
      FROM STR_CASHREGISTER CR
      JOIN STR_CASHREGISTERMODEL M ON CR.CASHREGISTERMODEL = M.CASHREGISTERMODELID
  	  JOIN STR_CASHREGISTERBRAND B ON M.BRAND = B.CASHREGISTERBRANDID
     WHERE B.BRAND_NM = 'Wincor'
       AND CR.DELETED_FL = 'N'
       AND LEN(PRICEFILEPATH_TXT) > 0
     GROUP BY STORE;
  ELSE
  BEGIN
   IF @GroupCode = 1
     INSERT INTO #STORES
     SELECT STORE, MAX(BRAND_NM) BRAND_NM, MAX(PRICEFILEPATH_TXT) PRICEFILEPATH_TXT
  	      , MIN(CURRENTPRICEVERSION) CURRENTPRICEVERSION, MIN(PRIVATEPRICEVERSION) PRIVATEPRICEVERSION, MAX(CREATEPRICEFILE_FL) CREATEPRICEFILE_FL
       FROM STR_CASHREGISTER CR
       JOIN STR_CASHREGISTERMODEL M ON CR.CASHREGISTERMODEL = M.CASHREGISTERMODELID
       JOIN STR_CASHREGISTERBRAND B ON M.BRAND = B.CASHREGISTERBRANDID
      WHERE CR.STORE = @StoreId
        AND CR.DELETED_FL = 'N'
  	    AND B.BRAND_NM != 'Wincor'
      GROUP BY STORE;
   ELSE
     INSERT INTO #STORES
     SELECT STORE, MAX(BRAND_NM) BRAND_NM, MAX(PRICEFILEPATH_TXT) PRICEFILEPATH_TXT
  	    , MIN(CURRENTPRICEVERSION) CURRENTPRICEVERSION, MIN(PRIVATEPRICEVERSION) PRIVATEPRICEVERSION, MAX(CREATEPRICEFILE_FL) CREATEPRICEFILE_FL
       FROM STR_SCALE CR
       JOIN STR_SCALEMODEL M ON CR.SCALEMODEL = M.SCALEMODELID
       JOIN STR_SCALEBRAND B ON M.BRAND = B.SCALEBRANDID
      WHERE CR.STORE = @StoreId
        AND CR.DELETED_FL = 'N'
      GROUP BY STORE;
  END
  
  
  IF OBJECT_ID('tempdb..#PRICEOP') IS NOT NULL DROP TABLE #PRICEOP
  IF OBJECT_ID('tempdb..#ACTIVEPACKAGEPRICES') IS NOT NULL DROP TABLE #ACTIVEPACKAGEPRICES
  IF OBJECT_ID('tempdb..#STOREPACKAGES') IS NOT NULL DROP TABLE #STOREPACKAGES
  IF OBJECT_ID('tempdb..#DELISTPRODUCTS') IS NOT NULL DROP TABLE #DELISTPRODUCTS
  
  -- wincor mağazalara ait paketleri ve en son versiyonlarını bul.
  DECLARE @now DATETIME = getdate();
  -- select @now;                            
  SELECT SP.STORE, ST.STORE_NM, SP.PACKAGE, PP.PACKAGE_NM, PV2.VERSIONID, PVCURRENT.VERSIONID CURRENTPRICEVERSION, SP.PRIORITY_NO
  	 , SEL.PRICEFILEPATH_TXT, CASE WHEN SP.PACKAGE = 1 THEN SEL.CURRENTPRICEVERSION ELSE SEL.PRIVATEPRICEVERSION END STOREVERSION
  	 , SEL.CURRENTPRICEVERSION STORECURRENTPRICEVERSION, SEL.PRIVATEPRICEVERSION, SEL.CREATEPRICEFILE_FL, SEL.BRAND_NM
    INTO #STOREPACKAGES
    FROM PRC_STOREPACKAGE SP
    JOIN STR_STORE ST ON SP.STORE = ST.STOREID
    JOIN PRC_PACKAGE PP ON SP.PACKAGE = PP.PACKAGEID
    JOIN #STORES SEL ON SEL.STORE = SP.STORE
    JOIN (SELECT MAX(PV.PACKAGEVERSIONID) VERSIONID FROM PRC_PACKAGEVERSION PV WHERE PV.ACTIVE_FL = 'Y' AND PV.PACKAGE = 1) PVCURRENT ON 1=1
    LEFT JOIN (SELECT PACKAGE, MAX(PV.PACKAGEVERSIONID) VERSIONID FROM PRC_PACKAGEVERSION PV WHERE PV.ACTIVE_FL = 'Y' GROUP BY PACKAGE) PV2 ON SP.PACKAGE = PV2.PACKAGE
   WHERE SP.DELETED_FL = 'N'
     AND PP.DELETED_FL = 'N'
     AND @now BETWEEN SP.START_TM AND SP.END_TM
  
  SELECT PRODUCT INTO #DELISTPRODUCTS FROM PRD_PROPERTY WHERE PROPERTYTYPE = 5 AND VALUE_TXT = '1'
  
  SELECT *
    INTO #ACTIVEPACKAGEPRICES
    FROM (
  SELECT P.PRICEID, SP.STORE, P.PRODUCT, P.PRICE_AMT, SP.PACKAGE, SP.PACKAGE_NM, SP.BRAND_NM
  	 , SP.PRICEFILEPATH_TXT, SP.CURRENTPRICEVERSION, SP.VERSIONID
  	 , PR.CODE_NM, PR.NAME_NM, BR.BARCODE_TXT, PR.UNIT, PR.SALEVAT_RT, PP.VALUE_TXT TOSHIBAID
  	 , ROW_NUMBER() OVER (PARTITION BY SP.STORE, P.PRODUCT, BR.BARCODE_TXT ORDER BY SP.PRIORITY_NO DESC) ROWNUMBER
    FROM PRC_ACTIVEPACKAGEPRICES_V P
    JOIN #STOREPACKAGES SP ON P.PACKAGE = SP.PACKAGE
    JOIN PRD_PRODUCT PR (NOLOCK) ON P.PRODUCT=PR.PRODUCTID
    JOIN PRD_BARCODE BR ON PR.PRODUCTID = BR.PRODUCT
    LEFT JOIN PRD_PROPERTY PP ON PR.PRODUCTID = PP.PRODUCT AND PP.PROPERTYTYPE = 3
   WHERE PR.DELETED_FL = 'N'
     AND BR.DELETED_FL = 'N'
     AND PR.PRODUCTID NOT IN (SELECT PRODUCT FROM #DELISTPRODUCTS)
     AND (@GroupCode = 1 OR (PR.UNIT = 1 AND LEN(BR.BARCODE_TXT) = 7))) A
   WHERE A.ROWNUMBER = 1
                    
  SELECT CASE WHEN B.CURRENTPRICEID IS NULL THEN 'INS'
  	   WHEN A.PRICEID IS NULL THEN 'DEL'
  	   ELSE 'UPD'
  	   END OPERATION_CD, A.*, B.CURRENTPRICEID
    INTO #PRICEOP
    FROM #ACTIVEPACKAGEPRICES A
    FULL OUTER JOIN (
  SELECT *
    FROM PRC_CURRENTPRICE
   WHERE STORE IN (SELECT DISTINCT STORE FROM #ACTIVEPACKAGEPRICES)
     AND GROUP_CD = @GroupCode) B ON A.CODE_NM = B.PRODUCTCODE_NM AND A.STORE = B.STORE AND A.BARCODE_TXT = B.BARCODE_TXT
   WHERE COALESCE(A.NAME_NM,' ') != COALESCE(B.PRODUCT_NM,' ')
      OR COALESCE(A.BARCODE_TXT,' ') != COALESCE(B.BARCODE_TXT,' ')
      OR COALESCE(A.UNIT,-1) != COALESCE(B.PRODUCTUNIT_NO,-1)
      OR COALESCE(A.PRICE_AMT,-1) != COALESCE(B.SALEPRICE_AMT,-1)
      OR COALESCE(A.SALEVAT_RT,-1) != COALESCE(B.SALEVAT_RT,-1)
  	OR COALESCE(A.PACKAGE,-1) != COALESCE(B.PACKAGE,-1)
  
  IF @GroupCode = 1
  BEGIN
    INSERT INTO PRC_PRICECHANGE
    (ORGANIZATION, CREATE_DT, STORE, PRODUCTCODE_NM, PRODUCTNAME_NM
    , OPERATION_TXT, OLDPRICE_AMT, NEWPRICE_AMT, STATUS_CD)
	SELECT 1, GETDATE(), STORE, PRODUCTCODE_NM, PRODUCT_NM, OPERATION_CD, SALEPRICE_AMT, PRICE_AMT, 0
	  FROM (
    SELECT COALESCE(OP.STORE, CP.STORE) STORE, COALESCE(OP.CODE_NM, CP.PRODUCTCODE_NM) PRODUCTCODE_NM
		 , COALESCE(OP.NAME_NM, CP.PRODUCT_NM) PRODUCT_NM, OP.OPERATION_CD, CP.SALEPRICE_AMT, OP.PRICE_AMT
		 , SUM(ISNULL(CP.SALEPRICE_AMT,0) - ISNULL(OP.PRICE_AMT,0)) OVER (PARTITION BY COALESCE(OP.STORE, CP.STORE), COALESCE(OP.CODE_NM, CP.PRODUCTCODE_NM)) INSDEL
      FROM #PRICEOP OP
      LEFT JOIN PRC_CURRENTPRICE CP ON OP.CURRENTPRICEID = CP.CURRENTPRICEID
     WHERE (OP.OPERATION_CD IN ('INS', 'DEL') OR (OP.OPERATION_CD = 'UPD' AND ISNULL(CP.SALEPRICE_AMT, -1) != ISNULL(OP.PRICE_AMT, -1)))) A
	 WHERE A.INSDEL != 0
  END
                    
  DECLARE @USER INT = COALESCE(dbo.SYS_GETCURRENTUSER_FN(),1)
  DECLARE @CHANNEL INT = COALESCE(dbo.SYS_GETCURRENTCHANNEL_FN(),1)
  DECLARE @BRANCH INT = COALESCE(dbo.SYS_GETCURRENTBRANCH_FN(),1)
  DECLARE @SCREEN INT = COALESCE(dbo.SYS_GETCURRENTSCREEN_FN(),1)
                    
  -- yeni insert olanlar                  
  INSERT INTO PRC_CURRENTPRICE
  (STORE, PRODUCTCODE_NM, PRODUCT_NM, BARCODE_TXT, PRODUCTUNIT_NO, SALEPRICE_AMT, SALEVAT_RT, VERSION_TM, GROUP_CD, PACKAGE)
  SELECT OP.STORE, OP.CODE_NM, OP.NAME_NM, OP.BARCODE_TXT, OP.UNIT, OP.PRICE_AMT, OP.SALEVAT_RT, @now, @GroupCode, OP.PACKAGE
    FROM #PRICEOP OP
   WHERE OP.OPERATION_CD = 'INS'
                    
  -- update ve delete olanlar                            
  INSERT INTO PRC_CURRENTPRICELOG
  (CURRENTPRICEID, LOG_DT, LOGUSER, LOGOPERATION_CD, LOGCHANNEL, LOGBRANCH, LOGSCREEN, STORE, PRODUCTCODE_NM, PRODUCT_NM, BARCODE_TXT, PRODUCTUNIT_NO, SALEPRICE_AMT, SALEVAT_RT, VERSION_TM, GROUP_CD, PACKAGE)
  SELECT OP.CURRENTPRICEID, @now, @USER, OP.OPERATION_CD, @CHANNEL, @BRANCH, @SCREEN, CP.STORE, PRODUCTCODE_NM, PRODUCT_NM, CP.BARCODE_TXT, PRODUCTUNIT_NO, SALEPRICE_AMT, CP.SALEVAT_RT, VERSION_TM, @GroupCode, CP.PACKAGE
    FROM #PRICEOP OP
    JOIN PRC_CURRENTPRICE CP ON OP.CURRENTPRICEID = CP.CURRENTPRICEID
   WHERE OP.OPERATION_CD IN ('UPD','DEL')
                    
  -- delete olanları sil                  
  DELETE FROM PRC_CURRENTPRICE
   WHERE CURRENTPRICEID IN (SELECT CURRENTPRICEID FROM #PRICEOP WHERE OPERATION_CD = 'DEL')
  
  -- update olanları update et                  
  UPDATE CP
     SET PRODUCT_NM = OP.NAME_NM
       , BARCODE_TXT = OP.BARCODE_TXT
       , SALEPRICE_AMT = OP.PRICE_AMT
       , SALEVAT_RT = OP.SALEVAT_RT
       , PRODUCTUNIT_NO = OP.UNIT
       , VERSION_TM = @now
  	 , PACKAGE = OP.PACKAGE
    FROM PRC_CURRENTPRICE CP
    JOIN #PRICEOP OP ON CP.CURRENTPRICEID = OP.CURRENTPRICEID
   WHERE OP.OPERATION_CD = 'UPD';
  
  -- gönderimi yapılan mağazaların createpricefile_fl'ini N yap ve versionları update et.
  IF (@Wincor = 1 OR @GroupCode = 1)
  BEGIN
   UPDATE CR
      SET CREATEPRICEFILE_FL = 'N'
        , CURRENTPRICEVERSION = ST.CURRENTPRICEVERSION
        , CURRENTPRICELOAD_TM = @now
        , PRIVATEPRICEVERSION = CASE WHEN ST.PACKAGE != 1 THEN ST.VERSIONID ELSE CR.PRIVATEPRICEVERSION END
        , PRIVATEPRICELOAD_TM = CASE WHEN ST.PACKAGE != 1 THEN @now ELSE CR.PRIVATEPRICELOAD_TM END
     FROM STR_CASHREGISTER CR
     JOIN #STOREPACKAGES ST ON CR.STORE = ST.STORE;
  END
  ELSE
  BEGIN
   UPDATE SCALE
      SET CREATEPRICEFILE_FL = 'N'
        , CURRENTPRICEVERSION = ST.CURRENTPRICEVERSION
        , CURRENTPRICELOAD_TM = @now
        , PRIVATEPRICEVERSION = CASE WHEN ST.PACKAGE != 1 THEN ST.VERSIONID ELSE SCALE.PRIVATEPRICEVERSION END
        , PRIVATEPRICELOAD_TM = CASE WHEN ST.PACKAGE != 1 THEN @now ELSE SCALE.PRIVATEPRICELOAD_TM END
     FROM STR_SCALE SCALE
     JOIN #STOREPACKAGES ST ON SCALE.STORE = ST.STORE;
  END;
  
  
  IF OBJECT_ID('tempdb..#PLU') IS NOT NULL DROP TABLE #PLU
  SELECT PRODUCT
       , MAX(CASE WHEN ORDERNO = 1 THEN BARCODE ELSE '00000000000000000000' END) PLU1
       , MAX(CASE WHEN ORDERNO = 2 THEN BARCODE ELSE '00000000000000000000' END) PLU2
       , MAX(CASE WHEN ORDERNO = 3 THEN BARCODE ELSE '00000000000000000000' END) PLU3
   INTO #PLU
   FROM (SELECT B.PRODUCT, B.BARCODE_TXT BARCODE, ROW_NUMBER() OVER (PARTITION BY PRODUCT ORDER BY B.BARCODEID) ORDERNO
           FROM PRD_BARCODE B
    WHERE B.DELETED_FL = 'N') A
  GROUP BY PRODUCT
    
  DECLARE @changed INT;
  SELECT @changed = COUNT(*) FROM #PRICEOP;
  
  SELECT PP.PRODUCTID, PP.ORGANIZATION, PP.DELETED_FL, PP.CREATE_DT, PP.UPDATE_DT, PP.CREATEUSER, PP.UPDATEUSER
       , OP.PRICE_AMT, OP.PRODUCT, OP.PACKAGE, PP.TOPPRICE_AMT, PP.PRINTTOPPRICE_FL, OP.NAME_NM PRODUCT_NM
       , OP.CODE_NM PRODUCTCODE_NM, OP.SALEVAT_RT, OP.UNIT, OP.BARCODE_TXT PLU1, '00000000000000000000' PLU2, '00000000000000000000' PLU3
       , OP.STORE, OP.PRICEFILEPATH_TXT, OP.VERSIONID PACKAGEVERSION, OP.CURRENTPRICEVERSION, OP.BRAND_NM, OP.TOSHIBAID
    FROM #ACTIVEPACKAGEPRICES OP
    JOIN PRC_PRODUCT PP ON OP.PRICEID = PP.PRODUCTID
   WHERE OP.STORE IN (SELECT STORE FROM #STORES WHERE CREATEPRICEFILE_FL = 'Y' OR @changed > 0)
     AND OP.BRAND_NM != 'NCR'
   UNION ALL
  SELECT PP.PRODUCTID, PP.ORGANIZATION, PP.DELETED_FL, PP.CREATE_DT, PP.UPDATE_DT, PP.CREATEUSER, PP.UPDATEUSER
    , OP.PRICE_AMT, OP.PRODUCT, OP.PACKAGE, PP.TOPPRICE_AMT, PP.PRINTTOPPRICE_FL, OP.NAME_NM PRODUCT_NM
    , OP.CODE_NM PRODUCTCODE_NM, OP.SALEVAT_RT, OP.UNIT, PLU.PLU1, PLU.PLU2, PLU.PLU3
    , OP.STORE, OP.PRICEFILEPATH_TXT
    , OP.VERSIONID PACKAGEVERSION, OP.CURRENTPRICEVERSION, OP.BRAND_NM, OP.TOSHIBAID
    FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY PRODUCT ORDER BY BARCODE_TXT) ROWNO FROM #ACTIVEPACKAGEPRICES) OP
    JOIN PRC_PRODUCT PP ON OP.PRICEID = PP.PRODUCTID
    JOIN #PLU PLU ON OP.PRODUCT = PLU.PRODUCT
   WHERE OP.STORE IN (SELECT STORE FROM #STORES WHERE CREATEPRICEFILE_FL = 'Y' OR @changed > 0)
     AND OP.BRAND_NM = 'NCR'
     AND OP.ROWNO = 1;

END;