CREATE PROCEDURE WHS_LST_STOCKTAKINGSCHEDULE_SP AS
BEGIN    
	
    IF OBJECT_ID('tempdb..#stores') IS NOT NULL DROP TABLE #stores
    
	select STOREID, STORE_NM into #stores from dbo.STR_GETUSERSTORESWHINC_FN();
    
    DECLARE @departmentGroup INT = dbo.SEC_DEPARTMENTGROUP_FN();

    WITH COUNTINGUSER AS (
        SELECT STOCKTAKINGSCHEDULE, USERFULL_NM TAKINGUSER
          FROM (
        SELECT STOCKTAKINGSCHEDULE, USERFULL_NM, ROW_NUMBER() OVER (PARTITION BY STOCKTAKINGSCHEDULE ORDER BY COUNTA DESC) ROWNO
          FROM (
        SELECT S.STOCKTAKINGSCHEDULE, U.USERFULL_NM, COUNT(*) COUNTA
          FROM WHS_STOCKTAKING S
          JOIN SEC_USER U ON U.USERID = S.UPDATEUSER
         WHERE S.UPDATEUSER IS NOT NULL
         GROUP BY S.STOCKTAKINGSCHEDULE, U.USERFULL_NM) A ) B
         WHERE B.ROWNO = 1) 
    SELECT S.STOCKTAKINGSCHEDULEID,    
           S.EVENT,    
           S.ORGANIZATION,    
           S.DELETED_FL,    
           S.CREATE_DT,    
           S.UPDATE_DT,    
           S.CREATEUSER,    
           S.UPDATEUSER,    
           S.CREATECHANNEL,    
           S.CREATEBRANCH,    
           S.CREATESCREEN,    
           S.SCHEDULE_NM,    
           S.STORE,    
           S.COUNTINGTYPE,    
           S.PLANNED_DT,    
           S.ACTUAL_DT,    
           S.STATUS,
		   ST.STORE_NM + '-' + convert(varchar, S.PLANNED_DT, 103) + '-' + CT.COUNTINGTYPE_NM SCHEDULEFULL_NM,
           T.TAKINGUSER
      FROM WHS_STOCKTAKINGSCHEDULE S (NOLOCK)    
	  JOIN #stores ST ON S.STORE = ST.STOREID
	  JOIN WHS_COUNTINGTYPE (NOLOCK) CT ON S.COUNTINGTYPE = CT.COUNTINGTYPEID
      LEFT JOIN COUNTINGUSER T ON T.STOCKTAKINGSCHEDULE = S.STOCKTAKINGSCHEDULEID
     WHERE DELETED_FL = 'N'  
	   AND (@departmentGroup = 1 OR S.STATUS = 1)
     ORDER BY PLANNED_DT DESC;    
    
END; 