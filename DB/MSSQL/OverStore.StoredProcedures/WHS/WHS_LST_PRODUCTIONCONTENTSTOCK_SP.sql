CREATE PROCEDURE WHS_LST_PRODUCTIONCONTENTSTOCK_SP @ProductionId INT AS
BEGIN

  IF OBJECT_ID('tempdb..#stock') IS NOT NULL DROP TABLE #stock
  IF OBJECT_ID('tempdb..#entryweight') IS NOT NULL DROP TABLE #entryweight

  DECLARE @today DATE = CAST(GETDATE() AS date);
  SELECT S.PRODUCT
	   , SUM(CASE WHEN WAREHOUSE = 1001 THEN STOCK ELSE 0 END) MAINWAREHOUSESTOCK
	   , SUM(CASE WHEN WAREHOUSE = 1003 THEN STOCK ELSE 0 END) PRODUCTIONWAREHOUSESTOCK
    INTO #stock
    FROM INV_WAREHOUSESTOCK_VW S
	JOIN WHS_PRODUCTIONCONTENT PC ON S.PRODUCT = PC.PRODUCT AND PC.PRODUCTION = @ProductionId
   WHERE @today BETWEEN START_DT AND END_DT
   GROUP BY S.PRODUCT;

  WITH ENTRYUNIT AS (SELECT PRODUCT, CAST(PACKAGE_QTY AS VARCHAR(MAX)) PACKAGE_QTY FROM WHS_PRODUCTSHIPMENTUNIT WHERE SHIPMENTTYPE = 2 AND PACKAGE_QTY > 0)
  SELECT 
    PRODUCT,
    STUFF((
      SELECT '; ' + PACKAGE_QTY
      FROM ENTRYUNIT
      WHERE (PRODUCT = Results.PRODUCT)
      FOR XML PATH(''),TYPE).value('(./text())[1]','VARCHAR(MAX)')
    ,1,2,'') AS PACKAGE_QTY
  INTO #entryweight
  FROM ENTRYUNIT Results
  GROUP BY PRODUCT

  
  SELECT PC.*, P.CODE_NM PRODUCTCODE_NM, P.NAME_NM PRODUCT_NM
	   , ISNULL(MAINWAREHOUSESTOCK, 0) MAINWAREHOUSESTOCK
	   , ISNULL(PRODUCTIONWAREHOUSESTOCK, 0) PRODUCTIONWAREHOUSESTOCK
	   , EW.PACKAGE_QTY UNITWEIGHT
	   , C.LASTPURCHASE_AMT UNITCOST
    FROM WHS_PRODUCTIONCONTENT PC
	JOIN PRD_PRODUCT P ON PC.PRODUCT = P.PRODUCTID
	LEFT JOIN #stock S ON P.PRODUCTID = S.PRODUCT
	LEFT JOIN #entryweight EW ON P.PRODUCTID = EW.PRODUCT
	LEFT JOIN PRD_COGS C ON C.PRODUCT = PC.PRODUCT AND @today BETWEEN C.START_DT AND C.END_DT
   WHERE PC.PRODUCTION = @ProductionId 
END