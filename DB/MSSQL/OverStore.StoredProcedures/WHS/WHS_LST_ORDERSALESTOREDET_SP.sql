CREATE PROCEDURE WHS_LST_ORDERSALESTOREDET_SP 
	@ProductId INT = -1,
	@StartDate DATE,
	@EndDate DATE AS
BEGIN

	WITH PRICE AS (
	SELECT PRODUCT, PRICE_AMT
	  FROM PRC_PRODUCT
	 WHERE PACKAGE = 1),
	ORDERS AS (
	SELECT ST.STOREID, ST.STORE_NM
		 , SUM(OD.SHIPPED_QTY*OD.ORDERUNIT_QTY*ISNULL(PR.PRICE_AMT,0)) ORDER_AMT
	  FROM WHS_STOREORDER O
	  JOIN WHS_STOREORDERDETAIL OD ON O.STOREORDERID = OD.STOREORDER
	  JOIN STR_STORE ST ON O.STORE = ST.STOREID
	  JOIN PRD_PRODUCT_VW P ON OD.PRODUCT = P.PRODUCTID
	  LEFT JOIN PRD_PRODUCT_VW P2 ON P.PARENT = P2.PRODUCTID
	  LEFT JOIN PRICE PR ON COALESCE(P2.PRODUCTID, P.PRODUCTID) = PR.PRODUCT
	 WHERE CAST(ORDER_DT AS DATE) BETWEEN @StartDate AND @EndDate
	   AND (@ProductId = -1 OR COALESCE(P2.PRODUCTID, P.PRODUCTID) = @ProductId)
	   AND O.STATUS >= 4
	 GROUP BY ST.STOREID, ST.STORE_NM), 
	SALES AS (
	SELECT ST.STOREID, ST.STORE_NM, SUM(PRICE) SALE_AMT
	  FROM SLS_STOREDAILYPRODUCT_SYN
	  JOIN STR_STORE ST ON STORE = ST.STOREID
	  JOIN PRD_PRODUCT_VW P ON PRODUCT = P.PRODUCTID
	  LEFT JOIN PRD_PRODUCT_VW P2 ON P.PARENT = P2.PRODUCTID
	 WHERE TRANSACTION_DT BETWEEN @StartDate AND @EndDate
	   AND (@ProductId = -1 OR COALESCE(P2.PRODUCTID, P.PRODUCTID) = @ProductId)
	 GROUP BY ST.STOREID, ST.STORE_NM) 
	SELECT COALESCE(A.STOREID, B.STOREID) STOREID
		 , COALESCE(A.STORE_NM, B.STORE_NM) STORE_NM
		 , A.ORDER_AMT, B.SALE_AMT
		 , (A.ORDER_AMT - B.SALE_AMT) / B.SALE_AMT DIFF 
	  FROM ORDERS A
	  FULL OUTER JOIN SALES B ON A.STOREID = B.STOREID;

END;