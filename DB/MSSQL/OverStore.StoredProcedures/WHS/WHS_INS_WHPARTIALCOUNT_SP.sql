CREATE PROCEDURE WHS_INS_WHPARTIALCOUNT_SP AS    
BEGIN    
  
  IF OBJECT_ID('tempdb.dbo.#SALES', 'U') IS NOT NULL  DROP TABLE #SALES    
  IF OBJECT_ID('tempdb.dbo.#RESULTS', 'U') IS NOT NULL  DROP TABLE #RESULTS    
  IF OBJECT_ID('tempdb.dbo.#RAND', 'U') IS NOT NULL  DROP TABLE #RAND    
     
  SELECT *, CUMSUMTOTAL * 100.0/STORETOTAL PCT    
    INTO #SALES    
    FROM (    
  SELECT *    
	   , ROW_NUMBER() OVER (ORDER BY TOTAL DESC) ROWNO    
	   , SUM(TOTAL) OVER (ORDER BY TOTAL DESC ROWS UNBOUNDED PRECEDING) CUMSUMTOTAL    
	   , SUM(TOTAL) OVER (PARTITION BY 1) STORETOTAL     
    FROM (    
	SELECT ST.PRODUCT, SUM(-1 * ST.QUANTITY_QTY * P.PRICE_AMT) TOTAL
	  FROM INV_STOCKTRANSACTIONS_SYN ST  
	  JOIN (SELECT PRODUCT, PRICE_AMT FROM PRC_PRODUCT WHERE PACKAGE = 1 AND DELETED_FL = 'N') P ON ST.PRODUCT = P.PRODUCT
	 WHERE ST.TRANSACTION_DT >= GETDATE() - 15    
	   AND ST.WAREHOUSE = 1001
	   AND ST.TRANSACTIONTYPE = 2
	 GROUP BY ST.PRODUCT) A) B
   WHERE STORETOTAL != 0  
   ORDER BY TOTAL DESC    
      
    
  SELECT *, ISNULL(LAG(LASTNUM) OVER (ORDER BY TOTAL DESC),0)+1 STARTNUM, SUM(COEFF) OVER (PARTITION BY 1) MAXNUM    
    INTO #RESULTS    
    FROM (    
  SELECT *, SUM(COEFF) OVER (ORDER BY TOTAL DESC ROWS UNBOUNDED PRECEDING) LASTNUM    
    FROM (    
  SELECT S.*, 'MERKEZ' STORE_NM, P.NAME_NM PRODUCT_NM, PP.PRICE_AMT
       , CASE WHEN PCT < 20 THEN 3 WHEN PCT < 50 THEN 2 ELSE 1 END +     
         CASE WHEN PRICE_AMT > 60 THEN 5 WHEN PRICE_AMT > 50 THEN 4 WHEN PRICE_AMT > 40 THEN 3 WHEN PRICE_AMT > 30 THEN 2 ELSE 1 END  COEFF     
    FROM #SALES S    
    JOIN PRD_PRODUCT P ON S.PRODUCT = P.PRODUCTID    
    JOIN (SELECT PRODUCT, PRICE_AMT FROM PRC_PRODUCT WHERE PACKAGE = 1) PP ON S.PRODUCT = PP.PRODUCT    
   WHERE PCT < 80) A ) B    
   ORDER BY TOTAL DESC    
     
     
  SELECT *    
    INTO #RAND    
    FROM (    
  SELECT 1 ORDER_NO, FLOOR(RAND(CHECKSUM(NEWID()))*MAX(MAXNUM-1))+1 RAND1 FROM #RESULTS 
   UNION ALL    
  SELECT 2, FLOOR(RAND(CHECKSUM(NEWID()))*MAX(MAXNUM-1))+1 RAND2 FROM #RESULTS 
   UNION ALL    
  SELECT 3, FLOOR(RAND(CHECKSUM(NEWID()))*MAX(MAXNUM-1))+1 RAND3 FROM #RESULTS 
   UNION ALL    
  SELECT 4, FLOOR(RAND(CHECKSUM(NEWID()))*MAX(MAXNUM-1))+1 RAND4 FROM #RESULTS ) A  
     
  DECLARE @date DATE = CAST(GETDATE()+0.5 AS DATE)    
  DECLARE @lastday DATE = CAST(GETDATE()-0.5 AS DATE)    
     
  INSERT INTO WHS_STOCKTAKINGSCHEDULE    
  (EVENT, ORGANIZATION, DELETED_FL, CREATE_DT, CREATEUSER, CREATECHANNEL, CREATEBRANCH, CREATESCREEN,    
   SCHEDULE_NM, STORE, COUNTINGTYPE, PLANNED_DT, STATUS)    
  SELECT 1, 1, 'N', GETDATE(), 1, 1, 1, 1, 'MERKEZ', 999, 2, @date, 1    
     
  INSERT INTO WHS_STOCKTAKING    
  (EVENT, ORGANIZATION, DELETED_FL, CREATE_DT, CREATEUSER, CREATECHANNEL, CREATEBRANCH, CREATESCREEN,    
   STORE, COUNTING_DT, PRODUCT, COUNTINGVALUE_AMT, ZONE, STOCKTAKINGSCHEDULE)    
  SELECT DISTINCT 1, 1, 'N', GETDATE(), 1, 1, 1, 1, 999, @date, R.PRODUCT, 0, ZONEID, S.STOCKTAKINGSCHEDULEID
	FROM #RAND ND    
    JOIN #RESULTS R ON ND.RAND1 BETWEEN R.STARTNUM AND R.LASTNUM    
    JOIN WHS_ZONE Z ON LOCATION_TXT = 'WAREHOUSE_D'
    JOIN WHS_STOCKTAKINGSCHEDULE S ON 999 = S.STORE AND S.PLANNED_DT = @date AND COUNTINGTYPE = 2 AND STATUS = 1    
	-- LEFT JOIN (SELECT PRODUCT, ROW_NUMBER() OVER (ORDER BY DRILLPRODUCTID) ORDER_NO FROM WHS_DRILLPRODUCT WHERE COUNTING_DT = @date) D ON D.ORDER_NO = ND.ORDER_NO  

  INSERT INTO WHS_STOCKTAKING  
  (EVENT, ORGANIZATION, DELETED_FL, CREATE_DT, CREATEUSER, CREATECHANNEL, CREATEBRANCH, CREATESCREEN,  
   STORE, COUNTING_DT, PRODUCT, COUNTINGVALUE_AMT, ZONE, STOCKTAKINGSCHEDULE)  
  SELECT 1, 1, 'N', GETDATE(), 1, 1, 1, 1, DP.STORE, @date, DP.PRODUCT, 0, ZONEID, S.STOCKTAKINGSCHEDULEID
    FROM WHS_DRILLPRODUCT DP
	JOIN WHS_STOCKTAKINGSCHEDULE S ON DP.STORE = S.STORE AND S.PLANNED_DT = @date AND COUNTINGTYPE = 2 AND STATUS = 1
	JOIN WHS_ZONE Z ON LOCATION_TXT = 'WAREHOUSE_D'
	LEFT JOIN WHS_STOCKTAKING STK ON STK.STOCKTAKINGSCHEDULE = S.STOCKTAKINGSCHEDULEID AND STK.PRODUCT = DP.PRODUCT AND STK.ZONE = Z.ZONEID
   WHERE DP.STORE = 999 
     AND DP.COUNTING_DT = @date
	 AND STK.STOCKTAKINGID IS NULL
   
END