CREATE PROCEDURE SLS_UPD_FIXCANCELLEDSALES_SP AS  
BEGIN   
  
  -- Toshiba e-faturaları Z'ye ekliyor.
  EXEC SLS_UPD_IBMZETEINVOICE_SP;
  
  DECLARE @StartDate DATE;
  SELECT @StartDate = DATEADD(DAY, 1, LAST_DT) FROM ACC_MONTHCLOSE
  DECLARE @EndDate DATE = CAST(GETDATE()-0.90 AS DATE)  
  -- SELECT @StartDate, @EndDate, 24*9.0/10 
    
  IF OBJECT_ID('tempdb.dbo.#SALES', 'U') IS NOT NULL DROP TABLE #SALES;         
  IF OBJECT_ID('tempdb.dbo.#ZET', 'U') IS NOT NULL DROP TABLE #ZET;      
  IF OBJECT_ID('tempdb.dbo.#DIFFS', 'U') IS NOT NULL DROP TABLE #DIFFS;      
  
  SELECT STORE, TRANSACTION_DT, CASHREGISTER,     
		 SUM(CASE WHEN TRANSACTIONTYPE != 5 THEN TOTAL_AMT ELSE 0 END) RECEIPT_AMT,    
		 -1*SUM(CASE WHEN TRANSACTIONTYPE = 5 THEN TOTAL_AMT ELSE 0 END) REFUND_AMT    
    INTO #SALES  
    FROM SLS_SALE S (NOLOCK)     
    JOIN STR_STORE ST ON S.STORE = ST.STOREID    
   WHERE S.CANCELLED_FL = 'N'    
     AND S.TRANSACTION_DT BETWEEN @StartDate AND @EndDate    
   GROUP BY STORE, TRANSACTION_DT, CASHREGISTER    
      
  SELECT STORE, TRANSACTION_DT, CASHREGISTER,    
		 SUM(RECEIPTTOTAL_AMT + SLPTOTAL_AMT) ZETRECEIPT_AMT,    
		 SUM(REFUND_AMT) ZETREFUND_AMT,    
		 COUNT(DISTINCT CASHREGISTER) ZCOUNT    
    INTO #ZET   
    FROM SLS_ZET_VW (NOLOCK)      
    JOIN STR_STORE ST ON STORE = ST.STOREID    
   WHERE TRANSACTION_DT BETWEEN @StartDate AND @EndDate    
   GROUP BY STORE, TRANSACTION_DT, CASHREGISTER    
    
  SELECT ST.STOREID, ST.STORE_NM, CR.CASHREGISTER, ST.TERMINAL, CAST(DT.DATE_DT AS DATE) DATE_DT, SR.REGIONMANAGER_NM    
	   , ISNULL(RECEIPT_AMT,0) RECEIPT_AMT, ISNULL(REFUND_AMT,0) REFUND_AMT    
	   , ISNULL(ZETRECEIPT_AMT, 0) ZETRECEIPT_AMT, ISNULL(ZETREFUND_AMT, 0) ZETREFUND_AMT    
	   , ABS(ISNULL(RECEIPT_AMT,0) - ISNULL(REFUND_AMT,0) - ISNULL(ZETRECEIPT_AMT,0) + ISNULL(ZETREFUND_AMT,0)) DIFF    
	   , ROW_NUMBER() OVER (ORDER BY CAST(DT.DATE_DT AS DATE)) ROWNO  
	INTO #DIFFS  
    FROM STR_STORE_VW ST (NOLOCK)    
    JOIN STR_STORE US ON ST.STOREID = US.STOREID    
    JOIN RPT_DATE DT ON DATE_DT BETWEEN @StartDate AND @EndDate    
    JOIN STR_ACTIVETERMINALS CR ON ST.STOREID = CR.STORE    
    LEFT JOIN STR_STOREREGION_VW SR ON ST.STOREID = SR.STOREID    
    LEFT JOIN #SALES SALE ON ST.STOREID = SALE.STORE AND DT.DATE_DT = SALE.TRANSACTION_DT AND CR.CASHREGISTER = SALE.CASHREGISTER    
    LEFT JOIN #ZET ZET ON ST.STOREID = ZET.STORE AND DT.DATE_DT = ZET.TRANSACTION_DT AND CR.CASHREGISTER = ZET.CASHREGISTER    
   WHERE CAST(ST.OPENING_DT AS DATE) <= DT.DATE_DT    
     AND ABS(ISNULL(RECEIPT_AMT,0) - ISNULL(REFUND_AMT,0) - ISNULL(ZETRECEIPT_AMT,0) + ISNULL(ZETREFUND_AMT,0)) > 0  
	 AND ST.TERMINAL != 'Toshiba' -- toshibalar hariç çalışıyor. 
   ORDER BY ABS(ISNULL(RECEIPT_AMT,0) - ISNULL(REFUND_AMT,0) - ISNULL(ZETRECEIPT_AMT,0) + ISNULL(ZETREFUND_AMT,0)) DESC;  
  
  -- hatalı iptal kaydını normale çek.  
  INSERT INTO SLS_CANCELFLAGUPDATE  
  (SALEID, GROUPNO, CREATE_DT, GROUP_DT)  
  SELECT SALEID, 1 GROUPNO, GETDATE(), CAST(GETDATE() AS DATE)  
    FROM (  
  SELECT B.*, A.SALEID, ROW_NUMBER() OVER (PARTITION BY ROWNO ORDER BY SALEID) ROWNO2  
    FROM SLS_SALE A  
	JOIN #DIFFS B ON A.STORE = B.STOREID AND A.TRANSACTION_DT = B.DATE_DT AND A.CASHREGISTER = B.CASHREGISTER AND A.CANCELLED_FL = 'Y' AND A.TOTAL_AMT = B.DIFF  
   WHERE B.ZETRECEIPT_AMT > B.RECEIPT_AMT) A  
   WHERE ROWNO2 = 1;  
  
  -- hatalı normal kaydını iptale çek.  
  INSERT INTO SLS_CANCELFLAGUPDATE  
  (SALEID, GROUPNO, CREATE_DT, GROUP_DT)  
  SELECT SALEID, 2 GROUPNO, GETDATE(), CAST(GETDATE() AS DATE)  
    FROM (  
  SELECT B.*, A.SALEID, ROW_NUMBER() OVER (PARTITION BY ROWNO ORDER BY SALEID) ROWNO2  
    FROM SLS_SALE A  
	JOIN #DIFFS B ON A.STORE = B.STOREID AND A.TRANSACTION_DT = B.DATE_DT AND A.CASHREGISTER = B.CASHREGISTER AND A.CANCELLED_FL = 'N' AND A.TOTAL_AMT = B.DIFF  
   WHERE B.ZETRECEIPT_AMT < B.RECEIPT_AMT) A  
   WHERE ROWNO2 = 1;  
  
  -- iade fişinde hatalı iptal kaydını normale çek.   
  INSERT INTO SLS_CANCELFLAGUPDATE  
  (SALEID, GROUPNO, CREATE_DT, GROUP_DT)  
  SELECT SALEID, 3 GROUPNO, GETDATE(), CAST(GETDATE() AS DATE)  
    FROM (  
  SELECT B.*, A.SALEID, ROW_NUMBER() OVER (PARTITION BY ROWNO ORDER BY SALEID) ROWNO2  
    FROM SLS_SALE A  
	JOIN #DIFFS B ON A.STORE = B.STOREID AND A.TRANSACTION_DT = B.DATE_DT AND A.CASHREGISTER = B.CASHREGISTER AND A.CANCELLED_FL = 'Y' AND -1 * A.TOTAL_AMT = B.DIFF  
   WHERE B.ZETREFUND_AMT > B.REFUND_AMT) A  
   WHERE ROWNO2 = 1;  
     
  UPDATE A SET CANCELLED_FL = CASE B.GROUPNO WHEN 1 THEN 'N' WHEN 2 THEN 'Y' WHEN 3 THEN 'N' END  
  -- SELECT A.*  
    FROM SLS_SALE A  
	JOIN SLS_CANCELFLAGUPDATE B ON A.SALEID = B.SALEID   
   WHERE B.GROUP_DT = CAST(GETDATE() AS DATE) AND B.GROUPNO IN (1,2,3)  
  
END