CREATE PROCEDURE [dbo].[INV_LST_STORESCURRENTSTOCK_SP] @Store INT=-1, @Product INT=-1, @StockDate DATE, @Select INT=1 AS   
BEGIN  

	IF OBJECT_ID('tempdb..#DRILLCOUNT') IS NOT NULL DROP TABLE #DRILLCOUNT
	IF OBJECT_ID('tempdb..#CURRENTSTOCK') IS NOT NULL DROP TABLE #CURRENTSTOCK
	IF OBJECT_ID('tempdb..#STOCKDATE') IS NOT NULL DROP TABLE #STOCKDATE

	SELECT *, CAST('' AS VARCHAR(100)) ALLSTOCKGROUP_NM INTO #CURRENTSTOCK FROM INV_CURRENTSTOCK WHERE 1=2

	IF @StockDate < CAST(GETDATE() AS DATE)
	BEGIN
	  SELECT *
	    INTO #STOCKDATE
		FROM [dbo].[INV_STOCKDATE2_FN] (@StockDate)
	   WHERE (@Store = -1 OR STORE = @Store) 
      INSERT INTO #CURRENTSTOCK
	  SELECT SD.STORE, ST.STORE_NM
	  	   , COALESCE(10000+SG.STOCKGROUP, P.PRODUCTID) PRODUCT, COALESCE(SG.STOCKGROUP_NM, P.NAME_NM) STOCKGROUP_NM
	  	   , SUM(SD.STOCK) STOCK, CS.AVGDAILYSALE, CS.MAXDAILYSALE
		   , COALESCE(SG2.STOCKGROUP_NM, P.NAME_NM) ALLSTOCKGROUP_NM
	    FROM #STOCKDATE SD
	    JOIN STR_STORE ST ON SD.STORE = ST.STOREID
	    JOIN PRD_PRODUCT P ON SD.PRODUCT = P.PRODUCTID
	    LEFT JOIN PRD_STOCKGROUP_VW SG ON P.PRODUCTID = SG.PRODUCTID AND SG.USAGETYPE_CD = 1
		LEFT JOIN PRD_STOCKGROUP_VW SG2 ON P.PRODUCTID = SG2.PRODUCTID
	    LEFT JOIN INV_CURRENTSTOCK CS ON SD.STORE = CS.STORE AND COALESCE(10000+SG.STOCKGROUP, P.PRODUCTID) = CS.PRODUCT
	   WHERE P.SUPERGROUP1 != 9
	   GROUP BY SD.STORE, ST.STORE_NM
		   , COALESCE(SG2.STOCKGROUP_NM, P.NAME_NM)
	  	   , COALESCE(10000+SG.STOCKGROUP, P.PRODUCTID), COALESCE(SG.STOCKGROUP_NM, P.NAME_NM)
	  	   , CS.AVGDAILYSALE, CS.MAXDAILYSALE
	  HAVING SUM(SD.STOCK) != 0
	END ELSE 
	BEGIN
	  INSERT INTO #CURRENTSTOCK
	  SELECT CS.*, COALESCE(SG2.STOCKGROUP_NM, CS.STOCKGROUP_NM) ALLSTOCKGROUP_NM
	    FROM INV_CURRENTSTOCK CS
		LEFT JOIN PRD_STOCKGROUP_VW SG2 ON CS.PRODUCT = SG2.PRODUCTID
	END

	SELECT *
	  INTO #DRILLCOUNT
	  FROM (
	SELECT *, ROW_NUMBER() OVER (PARTITION BY STORE, PRODUCT ORDER BY COUNTING_DT DESC) ROWNO
	  FROM (
	SELECT STORE, ISNULL(10000 + SG.STOCKGROUP, DC.PRODUCT) PRODUCT, COUNTING_DT, ISNULL(SG.STOCKGROUP_NM, DC.PRODUCT_NM) PRODUCT_NM
		 , SUM(SONDAJSTOK) SONDAJSTOK, SUM(STOCK) STOCK, SUM(DIFF_AMT) DIFF_AMT
	  FROM WHS_DRILLCOUNTSUMMARY DC
	  LEFT JOIN PRD_STOCKGROUP_VW SG ON DC.PRODUCT = SG.PRODUCTID AND USAGETYPE_CD = 1
	 GROUP BY STORE, ISNULL(10000 + SG.STOCKGROUP, DC.PRODUCT), COUNTING_DT, ISNULL(SG.STOCKGROUP_NM, DC.PRODUCT_NM) ) A ) AA
	 WHERE AA.ROWNO = 1

	IF ISNULL(@Select,1) = 1
	BEGIN  
		SELECT CS.STORE, STORE_NM, CS.PRODUCT, ALLSTOCKGROUP_NM, STOCKGROUP_NM, CS.STOCK
			 , CS.STOCK*ISNULL(PR.PRICE_AMT,0) STOCKPRICE, CS.STOCK*ISNULL(PR.PRICENOWAT_AMT,0) STOCKPRICENOWAT
			 , AVGDAILYSALE, MAXDAILYSALE
			 , CASE WHEN CS.STOCK > 0 AND AVGDAILYSALE > 0 THEN CEILING(CS.STOCK / AVGDAILYSALE)-1 ELSE 0 END INVENTORYTURNOVER
			 , DC.COUNTING_DT DRILLCOUNT_DT, DC.SONDAJSTOK, DC.STOCK DRILLCOUNTDATESTOCK, DC.DIFF_AMT
		  FROM #CURRENTSTOCK CS 
		  LEFT JOIN PRC_SALEPRICE_VW PR ON CS.PRODUCT = PR.PRODUCT
		  LEFT JOIN #DRILLCOUNT DC ON CS.STORE = DC.STORE AND CS.PRODUCT = DC.PRODUCT
		 WHERE (@Store = -1 OR CS.STORE = @Store)
		   AND (@Product = -1 OR CS.PRODUCT = @Product)  
	END  
	ELSE  
	BEGIN  
		SELECT 'STORE' STORE, 'STORE_NM' STORE_NM, CS.PRODUCT, ALLSTOCKGROUP_NM, STOCKGROUP_NM, 
			   SUM(CS.STOCK) STOCK, SUM(CS.STOCK*ISNULL(PR.PRICE_AMT,0)) STOCKPRICE,
			   SUM(CS.STOCK*ISNULL(PR.PRICENOWAT_AMT,0)) STOCKPRICENOWAT,
			   0 AVGDAILYSALE, 0 MAXDAILYSALE, 0 INVENTORYTURNOVER, 
			   CAST(GETDATE() AS date) DRILLCOUNT_DT, 0 SONDAJSTOK, 0 DRILLCOUNTDATESTOCK, 0 DIFF_AMT
		  FROM #CURRENTSTOCK CS
		  LEFT JOIN PRC_SALEPRICE_VW PR ON CS.PRODUCT = PR.PRODUCT
		 WHERE (@Store = -1 OR CS.STORE = @Store)
		   AND (@Product = -1 OR CS.PRODUCT = @Product)  
		 GROUP BY CS.PRODUCT, ALLSTOCKGROUP_NM, STOCKGROUP_NM
	END
	
END