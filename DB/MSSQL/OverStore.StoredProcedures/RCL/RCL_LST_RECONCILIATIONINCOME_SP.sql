CREATE PROCEDURE [dbo].[RCL_LST_RECONCILIATIONINCOME_SP]
    @StoreID INT,
	@TransactionDate DATETIME,
	@SaleTotal NUMERIC(22, 6) OUTPUT
AS
BEGIN
    DECLARE @Organization INT, @ForSaleTotal INT;
	SET @TransactionDate = CAST(@TransactionDate AS DATE)

    SELECT @Organization = dbo.SYS_GETCURRENTORGANIZATION_FN();
    IF dbo.SYS_ISSYSTEMORGANIZATION_FN() = 1
    BEGIN
      SET @Organization = null;
    END
	
		SET @ForSaleTotal = @SaleTotal;
	
		/*
		SELECT @SaleTotal = ISNULL(SUM(z.RECEIPTTOTAL_AMT), 0) + ISNULL(SUM(z.SLPTOTAL_AMT), 0) - ISNULL(SUM(Z.REFUND_AMT), 0)
		FROM  SLS_SALEZET z (NOLOCK) 
		WHERE z.STORE = @StoreID
			AND z.TRANSACTION_DT = @TransactionDate
			AND z.DELETED_FL = 'N'
			AND (@Organization IS NULL OR z.ORGANIZATION = @Organization);

		SELECT
			@SaleTotal = ISNULL(SUM(CASE WHEN sa.TRANSACTIONTYPE != 5 THEN S.PAID_AMT - S.REFUND_AMT ELSE 0 END), 0)
							+ ISNULL(SUM(CASE WHEN sa.TRANSACTIONTYPE != 5 THEN S.CARD_AMT ELSE 0 END), 0) 
							- ISNULL(SUM(CASE WHEN sa.TRANSACTIONTYPE != 5 THEN 0 ELSE ABS(S.PAID_AMT - S.REFUND_AMT) END), 0)
		FROM  SLS_SALE sa (NOLOCK) 
			LEFT JOIN SLS_SALEPAYMENT S (NOLOCK) ON sa.SALEID = S.SALE
		WHERE sa.STORE = @StoreID
			AND SA.TRANSACTION_DT = @TransactionDate
			AND SA.CANCELLED_FL = 'N'
			AND (@Organization IS NULL OR S.ORGANIZATION = @Organization);
			
		IF @ForSaleTotal = 1 RETURN 100;
		*/


		WITH ZET AS
		(SELECT * 
		   FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY TRANSACTION_DT, CASHREGISTER ORDER BY CREATE_DT DESC) ROWNO 
				   FROM sls_salezet (nolock) ) A
		  WHERE ROWNO = 1) 
		SELECT
			CAST(CR.STORE AS VARCHAR) + ' - ' + CAST(CR.CASHREGISTERID AS VARCHAR) CashRegister,

			ISNULL(ZET_NO, 0) ZetNo,

			ISNULL(SUM(CASE WHEN sa.TRANSACTIONTYPE != 5 THEN S.PAID_AMT - S.REFUND_AMT ELSE 0 END), 0)CashTotal,

			ISNULL(SUM(CASE WHEN sa.TRANSACTIONTYPE != 5 THEN S.CARD_AMT ELSE 0 END), 0) CardTotal,

			ISNULL(SUM(CASE WHEN sa.TRANSACTIONTYPE != 5 THEN 0 ELSE ABS(S.PAID_AMT - S.REFUND_AMT) END), 0) RefundTotal,

			ISNULL(SUM(CASE WHEN sa.TRANSACTIONTYPE != 5 THEN S.PAID_AMT - S.REFUND_AMT ELSE 0 END), 0)
				+ ISNULL(SUM(CASE WHEN sa.TRANSACTIONTYPE != 5 THEN S.CARD_AMT ELSE 0 END), 0) 
				- ISNULL(SUM(CASE WHEN sa.TRANSACTIONTYPE != 5 THEN 0 ELSE ABS(S.PAID_AMT - S.REFUND_AMT) END), 0) SaleTotal

		FROM  STR_STORE ST (NOLOCK) 
			JOIN STR_CASHREGISTER CR (NOLOCK) ON ST.STOREID = CR.STORE
			LEFT JOIN ZET Z on CR.CASHREGISTERID = z.CASHREGISTER AND z.TRANSACTION_DT = @TransactionDate
			LEFT JOIN SLS_SALE SA (NOLOCK) ON CR.CASHREGISTERID = SA.CASHREGISTER AND SA.TRANSACTION_DT = @TransactionDate
			LEFT JOIN SLS_SALEPAYMENT S (NOLOCK) ON sa.SALEID = S.SALE
		WHERE ST.STOREID = @StoreID
			AND ST.ACTIVE_FL = 'Y'
			AND (@Organization IS NULL OR ST.ORGANIZATION = @Organization)
		GROUP BY 
			CAST(CR.STORE AS VARCHAR) + ' - ' + CAST(CR.CASHREGISTERID AS VARCHAR),
			ISNULL(ZET_NO, 0);


END;