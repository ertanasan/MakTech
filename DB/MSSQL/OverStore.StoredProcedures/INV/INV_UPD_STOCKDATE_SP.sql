CREATE PROCEDURE INV_UPD_STOCKDATE_SP AS
BEGIN
	DECLARE @startDate DATE
	SELECT @startDate = MIN(D1.DATE_DT)
	  FROM RPT_DATE D1
	  JOIN RPT_DATE D2 ON D1.YEARMONTH_NO = D2.YEARMONTH_NO
	 WHERE D2.DATE_DT = CAST(GETDATE() - 30 AS DATE)

	IF OBJECT_ID('tempdb..#STARTSTOCK') IS NOT NULL DROP TABLE #STARTSTOCK
	IF OBJECT_ID('tempdb..#BASELIST') IS NOT NULL DROP TABLE #BASELIST
	IF OBJECT_ID('tempdb..#DATESTOCK') IS NOT NULL DROP TABLE #DATESTOCK

	SELECT *
	  INTO #STARTSTOCK
	  FROM dbo.[INV_STOCKDATE2_FN](@startDate)

	SELECT DATE_DT, STORE, PRODUCT
	  INTO #BASELIST
	  FROM (SELECT DATE_DT FROM RPT_DATE WHERE DATE_DT BETWEEN @startDate AND CAST(GETDATE() - 1 AS DATE)) A,
		   (SELECT DISTINCT STORE, PRODUCT
			  FROM (
			SELECT DISTINCT STORE, PRODUCT
			  FROM INV_STORETRANSACTIONS_VW INV  
			 WHERE INV.TRANSACTION_DT > @startDate AND INV.TRANSACTION_DT < CAST(GETDATE() AS DATE)
			 UNION ALL
			SELECT DISTINCT STORE, PRODUCT FROM #STARTSTOCK) B) C

	SELECT BL.*, SUM(ISNULL(A.STOCK,0) + ISNULL(B.DIFF_AMT,0) + ISNULL(C.STOCKTRAN,0)) OVER (PARTITION BY BL.STORE, BL.PRODUCT ORDER BY BL.DATE_DT ROWS UNBOUNDED PRECEDING) STOCK
	  INTO #DATESTOCK
	  FROM #BASELIST BL
	  LEFT JOIN (SELECT @startDate DATE_DT, * FROM #STARTSTOCK) A ON BL.DATE_DT = A.DATE_DT AND BL.STORE = A.STORE AND BL.PRODUCT = A.PRODUCT
	  LEFT JOIN (SELECT COUNTING_DT, SD.STORE, SD.PRODUCT, COUNTING_QTY - STOCK DIFF_AMT 
				   FROM WHS_COUNTINGSTOCKDIFF SD
				  WHERE COUNTING_DT > @startDate AND COUNTING_DT < CAST(GETDATE() AS DATE)) B ON BL.DATE_DT = B.COUNTING_DT AND BL.STORE = B.STORE AND BL.PRODUCT = B.PRODUCT
	  LEFT JOIN (SELECT INV.TRANSACTION_DT, INV.STORE, INV.PRODUCT, SUM(INV.QUANTITY_QTY) STOCKTRAN
				   FROM INV_STORETRANSACTIONS_VW INV  
				  WHERE INV.TRANSACTION_DT > @startDate AND INV.TRANSACTION_DT < CAST(GETDATE() AS DATE)
				  GROUP BY INV.TRANSACTION_DT, INV.STORE, INV.PRODUCT) C ON BL.DATE_DT = C.TRANSACTION_DT AND BL.STORE = C.STORE AND BL.PRODUCT = C.PRODUCT

	INSERT INTO INV_STOCKDATE_SYN
	SELECT DS.*
	  FROM #DATESTOCK DS
	  LEFT JOIN INV_STOCKDATE_SYN SD ON DS.STORE = SD.STORE	AND DS.DATE_DT = SD.DATE_DT AND DS.PRODUCT = SD.PRODUCT
	 WHERE SD.PRODUCT IS NULL

	UPDATE SD SET STOCK = DS.STOCK
	-- SELECT DS.*
	  FROM #DATESTOCK DS
	  JOIN INV_STOCKDATE_SYN SD ON DS.STORE = SD.STORE	AND DS.DATE_DT = SD.DATE_DT AND DS.PRODUCT = SD.PRODUCT
	 WHERE ROUND(ISNULL(DS.STOCK, 0),2) != ROUND(ISNULL(SD.STOCK,0),2)
END