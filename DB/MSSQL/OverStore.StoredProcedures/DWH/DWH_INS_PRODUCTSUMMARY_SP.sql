CREATE PROCEDURE DWH_INS_PRODUCTSUMMARY_SP @YearMonth INT AS
BEGIN

	SELECT CAST(SD.TRANSACTION_DT AS DATE) TRANSACTION_DT, SD.STORE, SD.PRODUCT, 
		   SUM(CASE WHEN S.TRANSACTIONTYPE != 5 THEN SD.QUANTITY_QTY*1.0/(CASE WHEN P.UNIT = 1 THEN 1000.0 ELSE 1 END) ELSE 0 END) SALE_QTY, 
		   SUM(CASE WHEN S.TRANSACTIONTYPE != 5 THEN PRICE ELSE 0 END) SALE_AMT,
		   SUM(CASE WHEN S.TRANSACTIONTYPE != 5 THEN 1 ELSE 0 END) SALE_CNT,
		   SUM(CASE WHEN S.TRANSACTIONTYPE = 5 THEN SD.QUANTITY_QTY*1.0/(CASE WHEN P.UNIT = 1 THEN 1000.0 ELSE 1 END) ELSE 0 END) REFUND_QTY, 
		   SUM(CASE WHEN S.TRANSACTIONTYPE = 5 THEN PRICE ELSE 0 END) REFUND_AMT,
		   SUM(CASE WHEN S.TRANSACTIONTYPE = 5 THEN 1 ELSE 0 END) REFUND_CNT
	  INTO #SD
	  FROM SLS_SALEDETAIL SD (NOLOCK)
	  JOIN RPT_DATE DT (NOLOCK) ON SD.TRANSACTION_DT = DT.DATE_DT
	  JOIN SLS_SALE S (NOLOCK) ON SD.SALE = S.SALEID
	  JOIN PRD_PRODUCT P (NOLOCK) ON SD.PRODUCT = P.PRODUCTID
	 WHERE SD.CANCEL_FL = 'N'
	   AND DT.YEARMONTH_NO = @YearMonth
	   AND S.CANCELLED_FL = 'N'
	 GROUP BY SD.TRANSACTION_DT, SD.STORE, SD.PRODUCT;
	
	INSERT INTO SLS_PRODUCTSUMMARY_SYN
	SELECT A.*
	  FROM #SD A
	  LEFT JOIN SLS_PRODUCTSUMMARY_SYN B ON A.TRANSACTION_DT = B.TRANSACTION_DT AND A.STORE = B.STORE AND A.PRODUCT = B.PRODUCT
	 WHERE B.PRODUCT IS NULL

	DELETE B
	-- SELECT B.*
	  FROM #SD A
	  RIGHT JOIN SLS_PRODUCTSUMMARY_SYN B ON A.TRANSACTION_DT = B.TRANSACTION_DT AND A.STORE = B.STORE AND A.PRODUCT = B.PRODUCT
	 WHERE A.PRODUCT IS NULL
	   AND B.TRANSACTION_DT IN (SELECT DATE_DT FROM RPT_DATE WHERE YEARMONTH_NO = @YearMonth);

	UPDATE B	
	   SET B.SALE_QTY = A.SALE_QTY, B.SALE_AMT = A.SALE_AMT
		 , B.REFUND_QTY = A.REFUND_QTY, B.REFUND_AMT = A.REFUND_AMT
		 , B.SALE_CNT = A.SALE_CNT, B.REFUND_CNT = A.REFUND_CNT
    -- SELECT *
	  FROM #SD A
	  JOIN SLS_PRODUCTSUMMARY_SYN B ON A.TRANSACTION_DT = B.TRANSACTION_DT AND A.STORE = B.STORE AND A.PRODUCT = B.PRODUCT
	 WHERE A.SALE_QTY != B.SALE_QTY OR A.SALE_AMT != B.SALE_AMT OR A.REFUND_QTY != B.REFUND_QTY OR A.REFUND_AMT != B.REFUND_AMT OR A.SALE_CNT != B.SALE_CNT OR A.REFUND_CNT != B.REFUND_CNT

END