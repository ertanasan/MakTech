CREATE PROCEDURE [dbo].[SLS_LST_DASHBOARDZETCOMPARE_SP] @StartDate DATE, @EndDate DATE, @TermDetail INT AS
BEGIN
	IF OBJECT_ID('tempdb.dbo.#STORES', 'U') IS NOT NULL DROP TABLE #STORES;     
	SELECT * INTO #STORES FROM dbo.STR_GETUSERSTORES_FN();

	IF @TermDetail = 0
	BEGIN
		IF OBJECT_ID('tempdb.dbo.#SALES', 'U') IS NOT NULL DROP TABLE #SALES;     
		IF OBJECT_ID('tempdb.dbo.#ZET', 'U') IS NOT NULL DROP TABLE #ZET;  

		SELECT STORE, TRANSACTION_DT, 
			   SUM(CASE WHEN TRANSACTIONTYPE != 5 THEN TOTAL_AMT ELSE 0 END) RECEIPT_AMT,
			   -1*SUM(CASE WHEN TRANSACTIONTYPE = 5 THEN TOTAL_AMT ELSE 0 END) REFUND_AMT
		  INTO #SALES
		  FROM SLS_SALE S (NOLOCK) 
		  JOIN #STORES ST ON S.STORE = ST.STOREID
		 WHERE S.CANCELLED_FL = 'N'
		   AND S.TRANSACTION_DT BETWEEN @StartDate AND @EndDate
		 GROUP BY STORE, TRANSACTION_DT
	 
		SELECT STORE, TRANSACTION_DT, 
			   SUM(RECEIPTTOTAL_AMT + SLPTOTAL_AMT) ZETRECEIPT_AMT,
			   SUM(REFUND_AMT) ZETREFUND_AMT,
			   COUNT(DISTINCT CASHREGISTER) ZCOUNT,
			   SUM(ZETCOUNT) ALLZCOUNT,
			   MIN(MINZET_TM) MINZET_TM,
			   MAX(MAXZET_TM) MAXZET_TM,
			   MIN(MINCREATE_TM) MINCREATE_TM,
			   MAX(MAXCREATE_TM) MAXCREATE_TM
		  INTO #ZET
		  FROM SLS_ZET_VW (NOLOCK)  
		  JOIN #STORES ST ON STORE = ST.STOREID
		 WHERE TRANSACTION_DT BETWEEN @StartDate AND @EndDate
		 GROUP BY STORE, TRANSACTION_DT

		SELECT ST.STOREID, ST.STORE_NM, ST.TERMINAL, CAST(DT.DATE_DT AS DATE) DATE_DT, SR.REGIONMANAGER_NM
			 , ISNULL(RECEIPT_AMT,0) RECEIPT_AMT, ISNULL(REFUND_AMT,0) REFUND_AMT
			 , ISNULL(ZETRECEIPT_AMT, 0) ZETRECEIPT_AMT, ISNULL(ZETREFUND_AMT, 0) ZETREFUND_AMT
			 , ABS(ISNULL(RECEIPT_AMT,0) - ISNULL(REFUND_AMT,0) - ISNULL(ZETRECEIPT_AMT,0) + ISNULL(ZETREFUND_AMT,0)) DIFF
			 , CAST(ST.TERMCOUNT AS VARCHAR(2))+'/'+CAST(ISNULL(ZET.ZCOUNT,0) AS VARCHAR(2))+'/'+CAST(ISNULL(ZET.ALLZCOUNT,0) AS VARCHAR(2)) STATUS
			 , MINZET_TM, MAXZET_TM, MINCREATE_TM, MAXCREATE_TM
		  FROM STR_STORE_VW ST (NOLOCK)
		  JOIN #STORES US ON ST.STOREID = US.STOREID
		  JOIN RPT_DATE DT ON DATE_DT BETWEEN @StartDate AND @EndDate
		  LEFT JOIN STR_STOREREGION_VW SR ON ST.STOREID = SR.STOREID
		  LEFT JOIN #SALES SALE ON ST.STOREID = SALE.STORE AND DT.DATE_DT = SALE.TRANSACTION_DT
		  LEFT JOIN #ZET ZET ON ST.STOREID = ZET.STORE AND DT.DATE_DT = ZET.TRANSACTION_DT
		 WHERE CAST(ST.OPENING_DT AS DATE) <= DT.DATE_DT
		 ORDER BY ABS(ISNULL(RECEIPT_AMT,0) - ISNULL(REFUND_AMT,0) - ISNULL(ZETRECEIPT_AMT,0) + ISNULL(ZETREFUND_AMT,0)) DESC
	END ELSE
	BEGIN
		IF OBJECT_ID('tempdb.dbo.#SALES', 'U') IS NOT NULL DROP TABLE #SALES;     
		IF OBJECT_ID('tempdb.dbo.#ZET', 'U') IS NOT NULL DROP TABLE #ZET;  

		SELECT STORE, TRANSACTION_DT, CASHREGISTER, 
			   SUM(CASE WHEN TRANSACTIONTYPE != 5 THEN TOTAL_AMT ELSE 0 END) RECEIPT_AMT,
			   -1*SUM(CASE WHEN TRANSACTIONTYPE = 5 THEN TOTAL_AMT ELSE 0 END) REFUND_AMT
		  INTO #SALES2
		  FROM SLS_SALE S (NOLOCK) 
		  JOIN #STORES ST ON S.STORE = ST.STOREID
		 WHERE S.CANCELLED_FL = 'N'
		   AND S.TRANSACTION_DT BETWEEN @StartDate AND @EndDate
		 GROUP BY STORE, TRANSACTION_DT, CASHREGISTER
	 
		SELECT STORE, TRANSACTION_DT, CASHREGISTER,
			   SUM(RECEIPTTOTAL_AMT + SLPTOTAL_AMT) ZETRECEIPT_AMT,
			   SUM(REFUND_AMT) ZETREFUND_AMT,
			   COUNT(DISTINCT CASHREGISTER) ZCOUNT,
			   MIN(MINZET_TM) MINZET_TM,
			   MAX(MAXZET_TM) MAXZET_TM,
			   MIN(MINCREATE_TM) MINCREATE_TM,
			   MAX(MAXCREATE_TM) MAXCREATE_TM
		  INTO #ZET2
		  FROM SLS_ZET_VW (NOLOCK)  
		  JOIN #STORES ST ON STORE = ST.STOREID
		 WHERE TRANSACTION_DT BETWEEN @StartDate AND @EndDate
		 GROUP BY STORE, TRANSACTION_DT, CASHREGISTER

		SELECT ST.STOREID, ST.STORE_NM, CR.CASHREGISTERID CASHREGISTER, ST.TERMINAL, CAST(DT.DATE_DT AS DATE) DATE_DT, SR.REGIONMANAGER_NM
			 , ISNULL(RECEIPT_AMT,0) RECEIPT_AMT, ISNULL(REFUND_AMT,0) REFUND_AMT
			 , ISNULL(ZETRECEIPT_AMT, 0) ZETRECEIPT_AMT, ISNULL(ZETREFUND_AMT, 0) ZETREFUND_AMT
			 , ABS(ISNULL(RECEIPT_AMT,0) - ISNULL(REFUND_AMT,0) - ISNULL(ZETRECEIPT_AMT,0) + ISNULL(ZETREFUND_AMT,0)) DIFF
			 , MINZET_TM, MAXZET_TM, MINCREATE_TM, MAXCREATE_TM
		  FROM STR_STORE_VW ST (NOLOCK)
		  JOIN #STORES US ON ST.STOREID = US.STOREID
		  JOIN RPT_DATE DT ON DATE_DT BETWEEN @StartDate AND @EndDate
		  JOIN STR_CASHREGISTER CR ON ST.STOREID = CR.STORE AND CR.DELETED_FL = 'N'
		  LEFT JOIN STR_STOREREGION_VW SR ON ST.STOREID = SR.STOREID
		  LEFT JOIN #SALES2 SALE ON ST.STOREID = SALE.STORE AND DT.DATE_DT = SALE.TRANSACTION_DT AND CR.CASHREGISTERID = SALE.CASHREGISTER
		  LEFT JOIN #ZET2 ZET ON ST.STOREID = ZET.STORE AND DT.DATE_DT = ZET.TRANSACTION_DT AND CR.CASHREGISTERID = ZET.CASHREGISTER
		 WHERE CAST(ST.OPENING_DT AS DATE) <= DT.DATE_DT
		 ORDER BY ABS(ISNULL(RECEIPT_AMT,0) - ISNULL(REFUND_AMT,0) - ISNULL(ZETRECEIPT_AMT,0) + ISNULL(ZETREFUND_AMT,0)) DESC
	END

END