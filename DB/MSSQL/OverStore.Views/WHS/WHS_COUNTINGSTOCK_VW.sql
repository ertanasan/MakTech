CREATE VIEW WHS_COUNTINGSTOCK_VW AS 
WITH COUNTINGDATES AS (
SELECT STORE, ISNULL(ACTUAL_DT, PLANNED_DT) DATE_DT, LAG(ISNULL(ACTUAL_DT, PLANNED_DT)) OVER (PARTITION BY STORE ORDER BY ISNULL(ACTUAL_DT, PLANNED_DT)) PREVDATE_DT
  FROM WHS_STOCKTAKINGSCHEDULE    
 WHERE COUNTINGTYPE = 1    
   AND DELETED_FL = 'N'  
   AND STATUS = 2),
COUNTINGSTOCK AS (
SELECT SS.STORE, ISNULL(SS.ACTUAL_DT, SS.PLANNED_DT) ACTUAL_DT, COALESCE(10000+SG.STOCKGROUP, P.PRODUCTID) PRODUCT, COALESCE(SG.STOCKGROUP_NM, P.NAME_NM) STOCKGROUP_NM
	  , SUM(ST.COUNTINGVALUE_AMT) STOCK
  FROM WHS_STOCKTAKINGSCHEDULE SS
  JOIN WHS_STOCKTAKING ST ON SS.STOCKTAKINGSCHEDULEID = ST.STOCKTAKINGSCHEDULE
  JOIN PRD_PRODUCT P ON ST.PRODUCT = P.PRODUCTID
  LEFT JOIN PRD_STOCKGROUP_VW SG ON P.PRODUCTID = SG.PRODUCTID AND SG.USAGETYPE_CD = 1
 WHERE SS.DELETED_FL = 'N'
   AND ST.DELETED_FL = 'N'
   AND SS.COUNTINGTYPE = 1
 GROUP BY SS.STORE, ISNULL(SS.ACTUAL_DT, SS.PLANNED_DT) , COALESCE(10000+SG.STOCKGROUP, P.PRODUCTID), COALESCE(SG.STOCKGROUP_NM, P.NAME_NM)),
TRANSACTIONS AS (
SELECT ST.STORE, CD.DATE_DT ACTUAL_DT, CD.PREVDATE_DT, COALESCE(10000+SG.STOCKGROUP, P.PRODUCTID) PRODUCT, COALESCE(SG.STOCKGROUP_NM, P.NAME_NM) STOCKGROUP_NM, SUM(ST.QUANTITY_QTY) QUANTITY_QTY
  FROM INV_STORETRANSACTIONS_VW ST    
  JOIN COUNTINGDATES CD ON ST.STORE = CD.STORE AND ST.TRANSACTION_DT > CD.PREVDATE_DT AND ST.TRANSACTION_DT <= DATE_DT
  JOIN PRD_PRODUCT P ON ST.PRODUCT = P.PRODUCTID
  LEFT JOIN PRD_STOCKGROUP_VW SG ON P.PRODUCTID = SG.PRODUCTID AND SG.USAGETYPE_CD = 1
 WHERE CD.PREVDATE_DT IS NOT NULL
 GROUP BY ST.STORE, CD.DATE_DT, CD.PREVDATE_DT, COALESCE(10000+SG.STOCKGROUP, P.PRODUCTID), COALESCE(SG.STOCKGROUP_NM, P.NAME_NM) )
SELECT STORE, DATE_DT, PREVDATE_DT, PRODUCT, STOCKGROUP_NM, SUM(PREVCOUNTING) PREVCOUNTING, SUM(STOCK) STOCK, SUM(NEWCOUNTING) NEWCOUNTING
  FROM (
SELECT CD.STORE, CD.DATE_DT, CD.PREVDATE_DT, PS.PRODUCT, PS.STOCKGROUP_NM, PS.STOCK PREVCOUNTING, PS.STOCK, 0 NEWCOUNTING
  FROM COUNTINGDATES CD 
  JOIN COUNTINGSTOCK PS ON CD.STORE = PS.STORE AND CD.PREVDATE_DT = PS.ACTUAL_DT 
 WHERE PREVDATE_DT IS NOT NULL
 UNION ALL
SELECT T.STORE, T.ACTUAL_DT, T.PREVDATE_DT, T.PRODUCT, T.STOCKGROUP_NM, 0, T.QUANTITY_QTY, 0
  FROM TRANSACTIONS T
 UNION ALL
SELECT CD.STORE, CD.DATE_DT, CD.PREVDATE_DT, PS.PRODUCT, PS.STOCKGROUP_NM, 0, 0, PS.STOCK 
  FROM COUNTINGDATES CD 
  JOIN COUNTINGSTOCK PS ON CD.STORE = PS.STORE AND CD.DATE_DT = PS.ACTUAL_DT 
 WHERE PREVDATE_DT IS NOT NULL  ) A
 GROUP BY STORE, DATE_DT, PREVDATE_DT, PRODUCT, STOCKGROUP_NM