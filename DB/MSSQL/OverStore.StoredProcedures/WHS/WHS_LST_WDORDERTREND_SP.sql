CREATE PROCEDURE WHS_LST_WDORDERTREND_SP @TrendDataType VARCHAR(20), @DayCount INT AS
BEGIN
 DECLARE @EndDate DATE, @StartDate DATE
 SELECT @EndDate = MAX(DATE_DT), @StartDate = DATEADD(DAY, -1-@DayCount, MAX(DATE_DT))
   FROM RPT_DATE
  WHERE DATE_DT <= CAST(GETDATE() AS DATE)
    AND DAYOFWEEK_NO != 7

 IF OBJECT_ID('tempdb.dbo.#GATHERDATES', 'U') IS NOT NULL DROP TABLE #GATHERDATES;
 SELECT D1.DATE_DT, CASE WHEN D2.DAYOFWEEK_NO = 7 THEN DATEADD(DAY, -1, D2.DATE_DT) ELSE D2.DATE_DT END GATHER_DT
   INTO #GATHERDATES
   FROM RPT_DATE D1
   JOIN RPT_DATE D2 ON D1.DATE_DT = DATEADD(DAY, 1, D2.DATE_DT)
  WHERE D1.DATE_DT BETWEEN DATEADD(DAY, -5, @StartDate) AND DATEADD(DAY, 5, @EndDate)

 IF @TrendDataType = 'Amount'
 BEGIN
  WITH ORDERS AS (
  SELECT GD.GATHER_DT, SUM(SOD.ORDER_QTY * SOD.ORDERUNIT_QTY * SP.PRICE_AMT) ORDER_QTY
    FROM WHS_STOREORDERDETAIL SOD (NOLOCK)
    JOIN WHS_STOREORDER SO (NOLOCK) ON SOD.STOREORDER = SO.STOREORDERID
    JOIN PRD_PRODUCT P (NOLOCK) ON SOD.PRODUCT = P.PRODUCTID
    JOIN #GATHERDATES GD ON SO.SHIPMENT_DT = GD.DATE_DT
    LEFT JOIN PRC_SALEPRICE_VW SP ON P.PRODUCTID = SP.PRODUCT
   WHERE SOD.DELETED_FL = 'N'
     AND SO.DELETED_FL = 'N'
     AND GD.GATHER_DT >= @StartDate
     AND GD.GATHER_DT < @EndDate
   GROUP BY GD.GATHER_DT),
  GATHERING AS (
  SELECT CAST(GD.GATHERING_TM AS date) GATHER_DT,
      SUM(ISNULL(GD.GATHERED_QTY,0) * SOD.ORDERUNIT_QTY * SP.PRICE_AMT) SHIPPED_QTY
    FROM WHS_GATHERINGDETAIL GD (NOLOCK)
    JOIN WHS_STOREORDERDETAIL SOD (NOLOCK) ON GD.STOREORDERDETAIL = SOD.STOREORDERDETAILID
    JOIN WHS_STOREORDER SO (NOLOCK) ON SOD.STOREORDER = SO.STOREORDERID
    JOIN PRD_PRODUCT P (NOLOCK) ON SOD.PRODUCT = P.PRODUCTID
    LEFT JOIN PRC_SALEPRICE_VW SP ON P.PRODUCTID = SP.PRODUCT
   WHERE GD.DELETED_FL = 'N'
     AND SOD.DELETED_FL = 'N'
     AND SO.DELETED_FL = 'N'
     AND GD.GATHERING_TM >= @StartDate
     AND GD.GATHERING_TM < @EndDate
   GROUP BY CAST(GD.GATHERING_TM AS date))
  SELECT D.DATE_DT GATHER_DT, ISNULL(O.ORDER_QTY, 0) ORDER_QTY, ISNULL(G.SHIPPED_QTY, 0) SHIPPED_QTY
    FROM RPT_DATE D
    LEFT JOIN ORDERS O ON D.DATE_DT = O.GATHER_DT
    LEFT JOIN GATHERING G ON D.DATE_DT = G.GATHER_DT
   WHERE DATE_DT >= @StartDate AND DATE_DT < @EndDate
   ORDER BY DATE_DT
 END

 ELSE IF @TrendDataType = 'Package'
 BEGIN
  WITH ORDERS AS (
  SELECT GD.GATHER_DT, SUM(SOD.ORDER_QTY) ORDER_QTY
    FROM WHS_STOREORDERDETAIL SOD (NOLOCK) 
    JOIN WHS_STOREORDER SO (NOLOCK) ON SOD.STOREORDER = SO.STOREORDERID
    JOIN PRD_PRODUCT P (NOLOCK) ON SOD.PRODUCT = P.PRODUCTID
    JOIN #GATHERDATES GD ON SO.SHIPMENT_DT = GD.DATE_DT
   WHERE SOD.DELETED_FL = 'N'
     AND SO.DELETED_FL = 'N'
     AND GD.GATHER_DT >= @StartDate
     AND GD.GATHER_DT < @EndDate
   GROUP BY GD.GATHER_DT),
  GATHERING AS (
  SELECT CAST(GD.GATHERING_TM AS date) GATHER_DT,
      SUM(ISNULL(GD.GATHERED_QTY,0)) SHIPPED_QTY
    FROM WHS_GATHERINGDETAIL GD (NOLOCK)
    JOIN WHS_STOREORDERDETAIL SOD (NOLOCK) ON GD.STOREORDERDETAIL = SOD.STOREORDERDETAILID
    JOIN WHS_STOREORDER SO (NOLOCK) ON SOD.STOREORDER = SO.STOREORDERID
    JOIN PRD_PRODUCT P (NOLOCK) ON SOD.PRODUCT = P.PRODUCTID
   WHERE GD.DELETED_FL = 'N'
     AND SOD.DELETED_FL = 'N'
     AND SO.DELETED_FL = 'N'
     AND GD.GATHERING_TM >= @StartDate
     AND GD.GATHERING_TM < @EndDate
   GROUP BY CAST(GD.GATHERING_TM AS date))
  SELECT D.DATE_DT GATHER_DT, ISNULL(O.ORDER_QTY, 0) ORDER_QTY, ISNULL(G.SHIPPED_QTY, 0) SHIPPED_QTY
    FROM RPT_DATE D
    LEFT JOIN ORDERS O ON D.DATE_DT = O.GATHER_DT
    LEFT JOIN GATHERING G ON D.DATE_DT = G.GATHER_DT
   WHERE DATE_DT >= @StartDate AND DATE_DT < @EndDate
   ORDER BY DATE_DT
 END

 ELSE IF @TrendDataType = 'Weight'
 BEGIN
  WITH ORDERS AS (
  SELECT GD.GATHER_DT, SUM(SOD.ORDER_QTY * ORDERUNIT_QTY * WEIGHT_AMT / 1000.0) ORDER_QTY
    FROM WHS_STOREORDERDETAIL SOD (NOLOCK) 
    JOIN WHS_STOREORDER SO (NOLOCK) ON SOD.STOREORDER = SO.STOREORDERID
    JOIN PRD_PRODUCT P (NOLOCK) ON SOD.PRODUCT = P.PRODUCTID
    JOIN #GATHERDATES GD ON SO.SHIPMENT_DT = GD.DATE_DT
   WHERE SOD.DELETED_FL = 'N'
     AND SO.DELETED_FL = 'N'
     AND GD.GATHER_DT >= @StartDate
     AND GD.GATHER_DT < @EndDate
   GROUP BY GD.GATHER_DT),
  GATHERING AS (
  SELECT CAST(GD.GATHERING_TM AS date) GATHER_DT,
      SUM(ISNULL(GD.GATHERED_QTY,0) * ORDERUNIT_QTY * WEIGHT_AMT / 1000.0) SHIPPED_QTY
    FROM WHS_GATHERINGDETAIL GD (NOLOCK)
    JOIN WHS_STOREORDERDETAIL SOD (NOLOCK) ON GD.STOREORDERDETAIL = SOD.STOREORDERDETAILID
    JOIN WHS_STOREORDER SO (NOLOCK) ON SOD.STOREORDER = SO.STOREORDERID
    JOIN PRD_PRODUCT P (NOLOCK) ON SOD.PRODUCT = P.PRODUCTID
   WHERE GD.DELETED_FL = 'N'
     AND SOD.DELETED_FL = 'N'
     AND SO.DELETED_FL = 'N'
     AND GD.GATHERING_TM >= @StartDate
     AND GD.GATHERING_TM < @EndDate
   GROUP BY CAST(GD.GATHERING_TM AS date))
  SELECT D.DATE_DT GATHER_DT, ISNULL(O.ORDER_QTY, 0) ORDER_QTY, ISNULL(G.SHIPPED_QTY, 0) SHIPPED_QTY
    FROM RPT_DATE D
    LEFT JOIN ORDERS O ON D.DATE_DT = O.GATHER_DT
    LEFT JOIN GATHERING G ON D.DATE_DT = G.GATHER_DT
   WHERE DATE_DT >= @StartDate AND DATE_DT < @EndDate
   ORDER BY DATE_DT
 END
END